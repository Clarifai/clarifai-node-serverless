// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.20.3
// source: proto/clarifai/api/status/status_code.proto

/* eslint-disable */

export const protobufPackage = "clarifai.api.status";

export enum StatusCode {
  /** ZERO - to be revised and greatly expanded */
  ZERO = 0,
  /** SUCCESS - Generic */
  SUCCESS = 10000,
  MIXED_STATUS = 10010,
  FAILURE = 10020,
  TRY_AGAIN = 10030,
  NOT_IMPLEMENTED = 10040,
  /** MOVED - Resource moved. Respond with Http status 307 and add new Location header to response */
  MOVED = 10050,
  TEAPOT = 10060,
  /** ACCEPTED - Request has been accepted. Respond with Http status 202. */
  ACCEPTED = 10070,
  /** CONN_ACCOUNT_ISSUES - Clarifai Connection Codes: 11xxx */
  CONN_ACCOUNT_ISSUES = 11000,
  /**
   * CONN_TOKEN_INVALID - invalid auth token used. Deprecated: we should return CONN_KEY_INVALID instead now in all cases.
   *
   * @deprecated
   */
  CONN_TOKEN_INVALID = 11001,
  /** CONN_CREDENTIALS_INVALID - invalid auth credentials */
  CONN_CREDENTIALS_INVALID = 11002,
  /** CONN_EXCEED_HOURLY_LIMIT - throttle hourly limit exceeded */
  CONN_EXCEED_HOURLY_LIMIT = 11003,
  /** CONN_EXCEED_MONTHLY_LIMIT - throttle monthly limit exceeded */
  CONN_EXCEED_MONTHLY_LIMIT = 11004,
  /** CONN_THROTTLED - throttler and billing stuff */
  CONN_THROTTLED = 11005,
  /** CONN_EXCEEDS_LIMITS - throttler and billing stuff */
  CONN_EXCEEDS_LIMITS = 11006,
  /** CONN_INSUFFICIENT_SCOPES - api key has insufficient permissions */
  CONN_INSUFFICIENT_SCOPES = 11007,
  /** CONN_KEY_INVALID - api key is invalid */
  CONN_KEY_INVALID = 11008,
  /** CONN_KEY_NOT_FOUND - api key not found */
  CONN_KEY_NOT_FOUND = 11009,
  /** CONN_BAD_REQUEST_FORMAT - multipart form parsing, broken json, etc */
  CONN_BAD_REQUEST_FORMAT = 11100,
  /** CONN_DOES_NOT_EXIST - when path is bad */
  CONN_DOES_NOT_EXIST = 11101,
  /** CONN_INVALID_REQUEST - something wrong with a header */
  CONN_INVALID_REQUEST = 11102,
  /** CONN_METHOD_NOT_ALLOWED - when a request method is not allowed */
  CONN_METHOD_NOT_ALLOWED = 11103,
  /** CONN_NO_GDPR_CONSENT - lack GDPR consent */
  CONN_NO_GDPR_CONSENT = 11104,
  /** CONN_INVALID_RANGE - when invalid range of a resource is requested */
  CONN_INVALID_RANGE = 11105,
  /** CONN_AUTH_METHOD_DISABLED - authentication method is disabled */
  CONN_AUTH_METHOD_DISABLED = 11200,
  /** MODEL_TRAINED - Model/Custom Training related 20xxx */
  MODEL_TRAINED = 21100,
  /** MODEL_TRAINING - Custom model is currently training. */
  MODEL_TRAINING = 21101,
  /** MODEL_UNTRAINED - Custom model has not yet been trained. */
  MODEL_UNTRAINED = 21102,
  /** MODEL_QUEUED_FOR_TRAINING - Custom model is currently in queue for training, waiting on assets to process first. */
  MODEL_QUEUED_FOR_TRAINING = 21103,
  MODEL_UPLOADING = 21104,
  MODEL_UPLOADING_FAILED = 21105,
  /** MODEL_TRAINING_FAILED - generic err msg for any type of model training err. */
  MODEL_TRAINING_FAILED = 21106,
  /** MODEL_BUILDING - For new V3 DockerInternalType models which are built images */
  MODEL_BUILDING = 21107,
  /** MODEL_BUILDING_FAILED - Failed to build image for model. */
  MODEL_BUILDING_FAILED = 21108,
  /** MODEL_BUILD_UNEXPECTED_ERROR - Failed to build image for model. */
  MODEL_BUILD_UNEXPECTED_ERROR = 21109,
  /** MODEL_TRAINING_NO_DATA - Custom model training had no data.  FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_NO_DATA = 21110,
  /** MODEL_TRAINING_NO_POSITIVES - Custom model training had no positive examples. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_NO_POSITIVES = 21111,
  /** MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS - Custom model training was ONE_VS_N but with a single class. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS = 21112,
  /** MODEL_TRAINING_TIMED_OUT - Training took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_TIMED_OUT = 21113,
  /** MODEL_TRAINING_WAITING_ERROR - Training got error waiting on asset pipeline to finish. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_WAITING_ERROR = 21114,
  /** MODEL_TRAINING_UNKNOWN_ERROR - Training threw an unknown exception. */
  MODEL_TRAINING_UNKNOWN_ERROR = 21115,
  /**
   * MODEL_TRAINING_MSG_REDELIVER - Training message was redelivered. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg
   *
   * @deprecated
   */
  MODEL_TRAINING_MSG_REDELIVER = 21116,
  /** MODEL_TRAINING_INSUFFICIENT_DATA - Training got error due to insufficient labelled data. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_INSUFFICIENT_DATA = 21117,
  /** MODEL_TRAINING_INVALID_PARAMS - FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_INVALID_PARAMS = 21118,
  /** MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED - Training is stopped because too much data was dropped. FIXME(yang): deprecate this. Use the 21106 + errStatusMsg */
  MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED = 21119,
  MODEL_MODIFY_SUCCESS = 21150,
  MODEL_MODIFY_PENDING = 21151,
  MODEL_MODIFY_FAILED = 21152,
  MODEL_DOES_NOT_EXIST = 21200,
  MODEL_PERMISSION_DENIED = 21201,
  MODEL_INVALID_ARGUMENT = 21202,
  MODEL_INVALID_REQUEST = 21203,
  MODEL_EVALUATED = 21300,
  MODEL_EVALUATING = 21301,
  MODEL_NOT_EVALUATED = 21302,
  MODEL_QUEUED_FOR_EVALUATION = 21303,
  /** MODEL_EVALUATION_TIMED_OUT - Evaluation took longer than hard coded timeouts. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg */
  MODEL_EVALUATION_TIMED_OUT = 21310,
  /** MODEL_EVALUATION_WAITING_ERROR - Evaluation got error waiting on asset pipeline to finish.FIXME(yang): deprecate this. Use the 21317 + errStatusMsg */
  MODEL_EVALUATION_WAITING_ERROR = 21311,
  /** MODEL_EVALUATION_UNKNOWN_ERROR - EVALUATION THREW AN UNKNOWN EXCEPTION. */
  MODEL_EVALUATION_UNKNOWN_ERROR = 21312,
  MODEL_PREDICTION_FAILED = 21313,
  /**
   * MODEL_EVALUATION_MSG_REDELIVER - Eval message was redelivered. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg
   *
   * @deprecated
   */
  MODEL_EVALUATION_MSG_REDELIVER = 21314,
  /** MODEL_EVALUATION_NEED_LABELS - Don't have enough concepts labelled to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg */
  MODEL_EVALUATION_NEED_LABELS = 21315,
  /** MODEL_EVALUATION_NEED_INPUTS - Don't have enough inputs per concept to perform evaluation. FIXME(yang): deprecate this. Use the 21317 + errStatusMsg */
  MODEL_EVALUATION_NEED_INPUTS = 21316,
  /** MODEL_EVALUATION_FAILED - Generic err code for eval failure. */
  MODEL_EVALUATION_FAILED = 21317,
  /** MODEL_DEPLOYMENT_FAILED - Used when inference coordinator failed to deploy spire and throws an error */
  MODEL_DEPLOYMENT_FAILED = 21350,
  /** MODEL_DEPLOYING - Used when calling the inference coordinator to deploy a spire */
  MODEL_DEPLOYING = 21351,
  /** MODEL_QUEUED_FOR_DEPLOYMENT - Used when training is completed */
  MODEL_QUEUED_FOR_DEPLOYMENT = 21352,
  /** MODEL_NOT_DEPLOYED - Used when model spire deployment is manually taken down or due to inactivity */
  MODEL_NOT_DEPLOYED = 21353,
  MODEL_BUSY_PLEASE_RETRY = 21354,
  /** MODEL_LOADING - Used when the model pod is running, but not yet ready to serve requests. */
  MODEL_LOADING = 21355,
  /** MODEL_REFERENCE_INVALID_ARGUMENT - Used when a model reference field is not set properly */
  MODEL_REFERENCE_INVALID_ARGUMENT = 21400,
  /** MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT - Used when a model example input field is not set properly */
  MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT = 21420,
  /** MODEL_EXPORTED - Model Export status codes */
  MODEL_EXPORTED = 21500,
  MODEL_EXPORTING = 21501,
  MODEL_EXPORTING_FAILED = 21502,
  MODEL_EXPORT_PENDING = 21503,
  /** WORKFLOW_NO_MATCHING_INPUT - specified model input not in workflow */
  WORKFLOW_NO_MATCHING_INPUT = 22001,
  /** WORKFLOW_REQUIRE_TRAINED_MODEL - specified model must be trained */
  WORKFLOW_REQUIRE_TRAINED_MODEL = 22002,
  WORKFLOW_DUPLICATE = 22100,
  WORKFLOW_UNSUPPORTED_FORMAT = 22101,
  WORKFLOW_DOES_NOT_EXIST = 22102,
  WORKFLOW_PERMISSION_DENIED = 22103,
  /** WORKFLOW_INVALID_ARGUMENT - error in the request somewhere */
  WORKFLOW_INVALID_ARGUMENT = 22104,
  WORKFLOW_INVALID_RECIPE = 22105,
  WORKFLOW_INVALID_TEMPLATE = 22106,
  WORKFLOW_INVALID_GRAPH = 22107,
  WORKFLOW_INTERNAL_FAILURE = 22108,
  /** WORKFLOW_INVALID_REQUEST - error in the request somewhere */
  WORKFLOW_INVALID_REQUEST = 22999,
  WORKFLOW_MODIFY_SUCCESS = 22150,
  WORKFLOW_MODIFY_PENDING = 22151,
  WORKFLOW_MODIFY_FAILED = 22152,
  WORKFLOW_REINDEX_FAILED = 22153,
  /** CONCEPT_MODIFY_SUCCESS - Concept related 23xxx */
  CONCEPT_MODIFY_SUCCESS = 23150,
  CONCEPT_MODIFY_PENDING = 23151,
  CONCEPT_MODIFY_FAILED = 23152,
  /** ANNOTATION_SUCCESS - Annotation related 24xxx */
  ANNOTATION_SUCCESS = 24150,
  ANNOTATION_PENDING = 24151,
  ANNOTATION_FAILED = 24152,
  ANNOTATION_UNKNOWN_STATUS = 24154,
  ANNOTATION_INVALID_ARGUMENT = 24155,
  ANNOTATION_PERMISSION_DENIED = 24156,
  /** ANNOTATION_AWAITING_REVIEW - Annotation is awaiting review from task REVIEWERS. */
  ANNOTATION_AWAITING_REVIEW = 24157,
  /** ANNOTATION_AWAITING_CONSENSUS_REVIEW - Annotation is awaiting consensus review from task LABELERS. */
  ANNOTATION_AWAITING_CONSENSUS_REVIEW = 24159,
  ANNOTATION_REVIEW_DENIED = 24158,
  ANNOTATION_MODIFY_SUCCESS = 24250,
  ANNOTATION_MODIFY_PENDING = 24251,
  ANNOTATION_MODIFY_FAILED = 24252,
  /**
   * ANNOTATION_TRACK_IDLE - Annotation (video) tracks are groups of annotations per frame
   * IDLE -> PROCESSING --> PENDING --> APPROVED --> (DELETED)
   * PROCESSING --> FAILED --> (DELETED)
   * PROCESSING --> (DELETED)
   */
  ANNOTATION_TRACK_IDLE = 24300,
  ANNOTATION_TRACK_IN_PROGRESS = 24301,
  ANNOTATION_TRACK_PENDING = 24302,
  ANNOTATION_TRACK_APPROVED = 24303,
  ANNOTATION_TRACK_FAILED = 24304,
  /** METADATA_INVALID_PATCH_ARGUMENTS - Metadata related 249xx */
  METADATA_INVALID_PATCH_ARGUMENTS = 24900,
  METADATA_PARSING_ISSUE = 24901,
  METADATA_MANIPULATION_ISSUE = 24902,
  /** TRAINER_JOB_STATE_NONE - Training service related 25xxx */
  TRAINER_JOB_STATE_NONE = 25000,
  TRAINER_JOB_STATE_QUEUED = 25001,
  TRAINER_JOB_STATE_RUNNING = 25002,
  TRAINER_JOB_STATE_COMPLETE = 25003,
  TRAINER_JOB_STATE_ERROR = 25004,
  /** DATA_DUMP_SUCCESS - Data Dump related 251xx */
  DATA_DUMP_SUCCESS = 25150,
  DATA_DUMP_PENDING = 25151,
  DATA_DUMP_FAILED = 25152,
  DATA_DUMP_IN_PROGRESS = 25153,
  /**
   * DATA_DUMP_NO_DATA - DEPRECATED: Not used anymore. Now for an empty data dump, DATA_DUMP_SUCCESS is returned. To detect an empty data dump, check if the inptus count is 0.
   *
   * @deprecated
   */
  DATA_DUMP_NO_DATA = 25154,
  DATA_DUMP_UNEXPECTED_ERROR = 25155,
  DATA_DUMP_EXPORT_SUCCESS = 25170,
  DATA_DUMP_EXPORT_PENDING = 25171,
  DATA_DUMP_EXPORT_FAILED = 25172,
  DATA_DUMP_EXPORT_IN_PROGRESS = 25173,
  DATA_DUMP_EXPORT_UNEXPECTED_ERROR = 25174,
  /** APP_DUPLICATION_SUCCESS - Duplicate related 252xx */
  APP_DUPLICATION_SUCCESS = 25200,
  APP_DUPLICATION_FAILED = 25201,
  APP_DUPLICATION_PENDING = 25202,
  APP_DUPLICATION_IN_PROGRESS = 25203,
  APP_DUPLICATION_INVALID_REQUEST = 25204,
  /** MODULE_DOES_NOT_EXIST - Module related codes 253xx */
  MODULE_DOES_NOT_EXIST = 25300,
  MODULE_PERMISSION_DENIED = 25301,
  MODULE_INVALID_ARGUMENT = 25302,
  MODULE_INVALID_REQUEST = 25303,
  /** BULK_OPERATION_SUCCESS - Bulk Operation related codes 254xx */
  BULK_OPERATION_SUCCESS = 25400,
  BULK_OPERATION_FAILED = 25401,
  BULK_OPERATION_PENDING = 25402,
  BULK_OPERATION_IN_PROGRESS = 25403,
  BULK_OPERATION_INVALID_REQUEST = 25404,
  BULK_OPERATION_CANCELLED = 25405,
  BULK_OPERATION_UNEXPECTED_ERROR = 25406,
  /** RUNNER_DOES_NOT_EXIST - Runner related codes 256xx */
  RUNNER_DOES_NOT_EXIST = 25600,
  RUNNER_PERMISSION_DENIED = 25601,
  RUNNER_INVALID_ARGUMENT = 25602,
  RUNNER_INVALID_REQUEST = 25603,
  RUNNER_NEEDS_RETRY = 25604,
  RUNNER_STREAM_START = 25605,
  RUNNER_STREAM_END = 25606,
  RUNNER_ITEM_CANCELLED = 25607,
  RUNNER_PROCESSING_FAILED = 25608,
  /** NODEPOOL_DOES_NOT_EXIST - Nodepool related codes 257xx */
  NODEPOOL_DOES_NOT_EXIST = 25700,
  NODEPOOL_INVALID_ARGUMENT = 25701,
  NODEPOOL_INVALID_REQUEST = 25702,
  /** COMPUTE_CLUSTER_DOES_NOT_EXIST - ComputeCluster related codes 258xx */
  COMPUTE_CLUSTER_DOES_NOT_EXIST = 25800,
  COMPUTE_CLUSTER_INVALID_ARGUMENT = 25801,
  COMPUTE_CLUSTER_INVALID_REQUEST = 25802,
  /** DEPLOYMENT_DOES_NOT_EXIST - Deployment related codes 259xx */
  DEPLOYMENT_DOES_NOT_EXIST = 25900,
  DEPLOYMENT_INVALID_ARGUMENT = 25901,
  DEPLOYMENT_INVALID_REQUEST = 25902,
  /** INSTANCE_TYPE_DOES_NOT_EXIST - InstanceType related codes 260xx */
  INSTANCE_TYPE_DOES_NOT_EXIST = 26000,
  INSTANCE_TYPE_INVALID_ARGUMENT = 26001,
  INSTANCE_TYPE_INVALID_REQUEST = 26002,
  /** COMPUTE_PLANE_METRICS_INVALID_REQUEST - Compute plane related codes 261xx */
  COMPUTE_PLANE_METRICS_INVALID_REQUEST = 26100,
  /** PIPELINE_STEP_DOES_NOT_EXIST - PipelineStep related codes 262xx */
  PIPELINE_STEP_DOES_NOT_EXIST = 26200,
  PIPELINE_STEP_INVALID_ARGUMENT = 26201,
  PIPELINE_STEP_INVALID_REQUEST = 26202,
  PIPELINE_STEP_UPLOADING = 26203,
  PIPELINE_STEP_UPLOADING_FAILED = 26204,
  PIPELINE_STEP_BUILDING = 26205,
  PIPELINE_STEP_BUILDING_FAILED = 26206,
  PIPELINE_STEP_BUILD_UNEXPECTED_ERROR = 26207,
  PIPELINE_STEP_READY = 26208,
  PIPELINE_STEP_NOT_READY = 26209,
  /** PIPELINE_DOES_NOT_EXIST - Pipeline related codes 263xx */
  PIPELINE_DOES_NOT_EXIST = 26300,
  PIPELINE_INVALID_ARGUMENT = 26301,
  PIPELINE_INVALID_REQUEST = 26302,
  /** INPUT_SUCCESS - Input:Image related 30xxx */
  INPUT_SUCCESS = 30000,
  /** INPUT_PENDING - when things are async, this is the default status. */
  INPUT_PENDING = 30001,
  /** INPUT_FAILED - any type of error downloading and processing */
  INPUT_FAILED = 30002,
  INPUT_IN_PROGRESS = 30003,
  /**
   * INPUT_DOWNLOAD_SUCCESS - use INPUT_SUCCESS, INPUT_PENDING, INPUT_FAILED, INPUT_IN_PROGRESS instead
   * DOWNLOAD is no longer correct, but keep old statuses for backward compatibility
   *
   * @deprecated
   */
  INPUT_DOWNLOAD_SUCCESS = 30000,
  /** @deprecated */
  INPUT_DOWNLOAD_PENDING = 30001,
  /** @deprecated */
  INPUT_DOWNLOAD_FAILED = 30002,
  /** @deprecated */
  INPUT_DOWNLOAD_IN_PROGRESS = 30003,
  INPUT_STATUS_UPDATE_FAILED = 30004,
  INPUT_DELETE_FAILED = 30005,
  INPUT_DUPLICATE = 30100,
  INPUT_UNSUPPORTED_FORMAT = 30101,
  INPUT_DOES_NOT_EXIST = 30102,
  INPUT_PERMISSION_DENIED = 30103,
  INPUT_INVALID_ARGUMENT = 30104,
  INPUT_OVER_LIMIT = 30105,
  INPUT_INVALID_URL = 30106,
  INPUT_MODIFY_SUCCESS = 30200,
  INPUT_MODIFY_PENDING = 30201,
  INPUT_MODIFY_FAILED = 30203,
  INPUT_STORAGE_HOST_FAILED = 30210,
  ALL_INPUT_INVALID_BYTES = 30300,
  INPUT_CLUSTER_SUCCESS = 30400,
  INPUT_CLUSTER_PENDING = 30401,
  INPUT_CLUSTER_FAILED = 30402,
  INPUT_CLUSTER_IN_PROGRESS = 30403,
  INPUT_REINDEX_SUCCESS = 30500,
  INPUT_REINDEX_PENDING = 30501,
  INPUT_REINDEX_FAILED = 30502,
  INPUT_REINDEX_IN_PROGRESS = 30503,
  /** INPUT_VIDEO_DOWNLOAD_SUCCESS - Input:Video related 31xxx -- Deprecated */
  INPUT_VIDEO_DOWNLOAD_SUCCESS = 31000,
  INPUT_VIDEO_DOWNLOAD_PENDING = 31001,
  INPUT_VIDEO_DOWNLOAD_FAILED = 31002,
  INPUT_VIDEO_DUPLICATE = 31100,
  INPUT_VIDEO_UNSUPPORTED_FORMAT = 31101,
  INPUT_VIDEO_DOES_NOT_EXIST = 31102,
  INPUT_VIDEO_PERMISSION_DENIED = 31103,
  INPUT_VIDEO_INVALID_ARGUMENT = 31104,
  INPUT_VIDEO_OVER_LIMIT = 31105,
  INPUT_VIDEO_INVALID_URL = 31106,
  INPUT_VIDEO_MODIFY_SUCCESS = 31200,
  INPUT_VIDEO_MODIFY_PENDING = 31201,
  INPUT_VIDEO_MODIFY_FAILED = 31203,
  INPUT_VIDEO_STORAGE_HOST_FAILED = 31210,
  ALL_INPUT_VIDEOS_INVALID_BYTES = 31300,
  INPUT_VIDEO_PROCESSING_SUCCESS = 31400,
  INPUT_VIDEO_PROCESSING_PENDING = 31410,
  INPUT_VIDEO_PROCESSING_FAILED = 31420,
  INPUT_VIDEO_STORAGE_INCONSISTENCY = 31430,
  INPUT_VIDEO_STORAGE_FAILURE = 31440,
  INPUT_VIDEO_URL_GENERATION_FAILURE = 31450,
  INPUT_CONNECTION_FAILED = 39996,
  REQUEST_DISABLED_FOR_MAINTENANCE = 39997,
  /**
   * INPUT_WRITES_DISABLED_FOR_MAINTENANCE - deprecate this one. Use REQUEST_DISABLED_FOR_MAINTENANCE
   *
   * @deprecated
   */
  INPUT_WRITES_DISABLED_FOR_MAINTENANCE = 39998,
  INPUT_INVALID_REQUEST = 39999,
  /** PREDICT_INVALID_REQUEST - API formatting issues 4000x */
  PREDICT_INVALID_REQUEST = 40001,
  SEARCH_INVALID_REQUEST = 40002,
  CONCEPTS_INVALID_REQUEST = 40003,
  STATS_INVALID_REQUEST = 40004,
  /** DATABASE_DUPLICATE_KEY - Other related 400xx */
  DATABASE_DUPLICATE_KEY = 40010,
  DATABASE_STATEMENT_TIMEOUT = 40011,
  DATABASE_INVALID_ROWS_AFFECTED = 40012,
  DATABASE_DEADLOCK_DETECTED = 40013,
  DATABASE_FAIL_TASK = 40014,
  DATABASE_FAIL_TO_GET_CONNECTIONS = 40015,
  DATABASE_TOO_MANY_CLIENTS = 40016,
  DATABASE_CONSTRAINT_VIOLATED = 40017,
  DATABASE_CANCELED = 40021,
  ASYNC_WORKER_MULTI_ERRORS = 40020,
  RPC_REQUEST_QUEUE_FULL = 40030,
  RPC_SERVER_UNAVAILABLE = 40031,
  RPC_REQUEST_TIMEOUT = 40032,
  RPC_MAX_MESSAGE_SIZE_EXCEEDED = 40033,
  RPC_CANCELED = 40035,
  RPC_UNKNOWN_METHOD = 40036,
  REQUEST_CANCELED_BY_USER = 40037,
  CLUSTER_INTERNAL_FAILURE = 43040,
  /** EXTERNAL_CONNECTION_ERROR - could not connect to external services */
  EXTERNAL_CONNECTION_ERROR = 40034,
  QUERY_INVALID_SYNTAX = 40050,
  /** QUEUE_CONN_ERROR - Queue related errors 41xxx */
  QUEUE_CONN_ERROR = 41000,
  QUEUE_CLOSE_REQUEST_TIMEOUT = 41002,
  QUEUE_CONN_CLOSED = 41003,
  QUEUE_PUBLISH_ACK_TIMEOUT = 41004,
  QUEUE_PUBLISH_ERROR = 41005,
  QUEUE_SUBSCRIPTION_TIMEOUT = 41006,
  QUEUE_SUBSCRIPTION_ERROR = 41007,
  QUEUE_MARSHALLING_FAILED = 41008,
  QUEUE_UNMARSHALLING_FAILED = 41009,
  QUEUE_MAX_MSG_REDELIVERY_EXCEEDED = 41010,
  QUEUE_ACK_FAILURE = 41011,
  /** SQS_OVERLIMIT - SQS related errors 411xx */
  SQS_OVERLIMIT = 41100,
  SQS_INVALID_RECEIPT_HANDLE = 41101,
  SQS_UNKNOWN = 41102,
  /** SEARCH_INTERNAL_FAILURE - Search related errors 43xxxx */
  SEARCH_INTERNAL_FAILURE = 43001,
  SEARCH_PROJECTION_FAILURE = 43002,
  SEARCH_PREDICTION_FAILURE = 43003,
  SEARCH_BY_NOT_FULLY_INDEXED_INPUT = 43004,
  SAVED_SEARCH_MODIFY_FAILED = 43005,
  SEARCH_COUNTS_UNAVAILABLE = 43006,
  /** EVALUATION_QUEUED - Workflow evaluation err code */
  EVALUATION_QUEUED = 43100,
  EVALUATION_IN_PROGRESS = 43101,
  EVALUATION_SUCCESS = 43102,
  EVALUATION_FAILED_TO_RETRIEVE_DATA = 43103,
  EVALUATION_INVALID_ARGUMENT = 43104,
  EVALUATION_FAILED = 43105,
  EVALUATION_PENDING = 43106,
  EVALUATION_TIMED_OUT = 43107,
  EVALUATION_UNEXPECTED_ERROR = 43108,
  EVALUATION_MIXED = 43109,
  /** STRIPE_EVENT_ERROR - Stripe 44xxx */
  STRIPE_EVENT_ERROR = 44001,
  STRIPE_UNEXPECTED_ERROR = 44002,
  /** CACHE_MISS - Redis/Cache 45xxx */
  CACHE_MISS = 45001,
  REDIS_SCRIPT_EXITED_WITH_FAILURE = 45002,
  REDIS_STREAM_ERR = 45003,
  REDIS_NO_CONSUMERS = 45004,
  REDIS_STREAM_BACKOFF = 45005,
  /** SIGNUP_EVENT_ERROR - Sift Science 46xxx */
  SIGNUP_EVENT_ERROR = 46001,
  SIGNUP_FLAGGED = 46002,
  FILETYPE_UNSUPPORTED = 46003,
  LOGIN_EVENT_ERROR = 46004,
  SIFT_UNCATEGORIZED_ERROR = 46005,
  /** APP_COUNT_INVALID_MESSAGE - Application counts related errors 470xx */
  APP_COUNT_INVALID_MESSAGE = 47001,
  APP_COUNT_UPDATE_INCREMENT_FAILED = 47002,
  APP_COUNT_REBUILD_FAILED = 47003,
  APP_COUNT_INTERNAL_FAILURE = 47004,
  /** MP_DOWNLOAD_ERROR - Media processor related errors 471xx -- DEPRECATED */
  MP_DOWNLOAD_ERROR = 47101,
  MP_RESOLVE_DNS_ERROR = 47102,
  MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR = 47103,
  MP_IMAGE_DECODE_ERROR = 47104,
  MP_INVALID_ARGUMENT = 47105,
  MP_IMAGE_PROCESSING_ERROR = 47106,
  /** DATATIER_CONN_ERROR - DataTier related error 472xx */
  DATATIER_CONN_ERROR = 47201,
  /** USER_CONSENT_FACE - User legal consent stauts related 50xxx */
  USER_CONSENT_FACE = 50001,
  /** WORKER_MISSING - Workers 51xxx */
  WORKER_MISSING = 51000,
  WORKER_ACTIVE = 51001,
  WORKER_INACTIVE = 51002,
  /** COLLECTOR_MISSING - Collectors 52xxx */
  COLLECTOR_MISSING = 52000,
  COLLECTOR_ACTIVE = 52001,
  COLLECTOR_INACTIVE = 52002,
  COLLECTOR_POST_INPUT_FAILED = 52003,
  /** SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST - SSO 53xxx */
  SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST = 53001,
  /**
   * TASK_IN_PROGRESS - Tasks 54xxx
   * The task was created.
   */
  TASK_IN_PROGRESS = 54001,
  /** TASK_DONE - The task is completed. */
  TASK_DONE = 54002,
  /** TASK_WONT_DO - The task is marked as abandoned. */
  TASK_WONT_DO = 54003,
  /** TASK_FAILED - An error occurred during add-task-annotations or add-auto-annotations pipeline. */
  TASK_FAILED = 54005,
  /** TASK_IDLE - When an Auto Annotation task job has finished processing its last batch and is waiting for more dataset assets. */
  TASK_IDLE = 54006,
  /** TASK_CONFLICT - The task operation is in conflict with the current state of the server. */
  TASK_CONFLICT = 54100,
  /** TASK_NOT_IMPLEMENTED - Certain task-related scenarios are not implemented. */
  TASK_NOT_IMPLEMENTED = 54101,
  /** TASK_MISSING - Task was not found. */
  TASK_MISSING = 54102,
  /** TASK_PERMISSION_DENIED - Not allowed to perform a task-related action. */
  TASK_PERMISSION_DENIED = 54103,
  /** TASK_ASSIGNMENT_SUCCESS - Task Assignments 542xx */
  TASK_ASSIGNMENT_SUCCESS = 54200,
  TASK_ASSIGNMENT_PENDING = 54201,
  TASK_ASSIGNMENT_AWAITING_REVIEW = 54202,
  TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW = 54203,
  TASK_ASSIGNMENT_REJECTED = 54204,
  /** TASK_ASSIGNMENT_REVIEW_SUCCESS - Task Assignment Reviews 543xx */
  TASK_ASSIGNMENT_REVIEW_SUCCESS = 54300,
  TASK_ASSIGNMENT_REVIEW_PENDING = 54301,
  TASK_ASSIGNMENT_REVIEW_DISMISSED = 54302,
  /** LABEL_ORDER_PENDING - Label Order Related Status Code 55xxx */
  LABEL_ORDER_PENDING = 55001,
  LABEL_ORDER_IN_PROGRESS = 55002,
  LABEL_ORDER_SUCCESS = 55003,
  LABEL_ORDER_CANCELED = 55004,
  /** LICENSE_ACTIVE - License Related Status Code 600xx */
  LICENSE_ACTIVE = 60000,
  LICENSE_DOES_NOT_EXIST = 60001,
  LICENSE_NEED_UPDATE = 60002,
  LICENSE_EXPIRED = 60003,
  LICENSE_REVOKED = 60004,
  /** LICENSE_DELETED - hidden state not reflected to users */
  LICENSE_DELETED = 60005,
  LICENSE_VOLUME_EXCEEDED = 60006,
  /** PASSWORD_VALIDATION_SUCCESS - Password Related Status Code */
  PASSWORD_VALIDATION_SUCCESS = 61000,
  PASSWORD_VALIDATION_FAILED = 61001,
  PASSWORDPOLICY_INVALID_ARGUMENT = 61002,
  /** FEATUREFLAG_CONFIG_NOT_FOUND - Feature flags status code */
  FEATUREFLAG_CONFIG_NOT_FOUND = 62000,
  FEATUREFLAG_INVALID_ARGUMENT = 62001,
  FEATUREFLAG_BLOCKED = 62002,
  FEATUREFLAG_NOT_FOUND = 62003,
  /** MAINTENANCE_SUCCESS - Maintenance status code */
  MAINTENANCE_SUCCESS = 63000,
  MAINTENANCE_FAILED = 63001,
  /**
   * DATASET_VERSION_PENDING - Datasets 64xxx
   * The dataset version is pending to be processed.
   */
  DATASET_VERSION_PENDING = 64005,
  /** DATASET_VERSION_IN_PROGRESS - The dataset version is currently being processed. */
  DATASET_VERSION_IN_PROGRESS = 64010,
  /** DATASET_VERSION_READY - The dataset version is ready to be used. */
  DATASET_VERSION_READY = 64015,
  /** DATASET_VERSION_FAILURE - An error occurred during the dataset version processing. */
  DATASET_VERSION_FAILURE = 64020,
  /** DATASET_VERSION_UNEXPECTED_ERROR - An unexpected error occurred during the dataset version processing. */
  DATASET_VERSION_UNEXPECTED_ERROR = 64025,
  /** DATASET_VERSION_CONFLICT - An alteration to dataset version would create a conflict */
  DATASET_VERSION_CONFLICT = 64030,
  /** DATASET_INPUT_SUCCESS - The dataset input was successfully added. */
  DATASET_INPUT_SUCCESS = 64100,
  /**
   * DATASET_INPUT_DUPLICATE - The dataset input is a duplicate.
   * Deprecated: Unused.
   */
  DATASET_INPUT_DUPLICATE = 64101,
  /** DATASET_VERSION_EXPORT_SUCCESS - The dataset version export is completed. */
  DATASET_VERSION_EXPORT_SUCCESS = 64200,
  /** DATASET_VERSION_EXPORT_PENDING - The dataset version is pending to be exported. */
  DATASET_VERSION_EXPORT_PENDING = 64201,
  /** DATASET_VERSION_EXPORT_FAILED - An error occurred during the dataset version export. */
  DATASET_VERSION_EXPORT_FAILED = 64202,
  /** DATASET_VERSION_EXPORT_IN_PROGRESS - The dataset version is currently being exported. */
  DATASET_VERSION_EXPORT_IN_PROGRESS = 64203,
  /** DATASET_VERSION_EXPORT_UNEXPECTED_ERROR - An unexpected error occurred during the dataset version export. */
  DATASET_VERSION_EXPORT_UNEXPECTED_ERROR = 64204,
  /** JOB_QUEUED - Generic Job status codes */
  JOB_QUEUED = 64000,
  JOB_RUNNING = 64001,
  JOB_COMPLETED = 64002,
  JOB_FAILED = 64003,
  JOB_CANCELLED = 64004,
  JOB_UNEXPECTED_ERROR = 64006,
  JOB_CONFLICT = 64007,
  /** AUTH_MISSING_IDP_ASSOC - auth issues */
  AUTH_MISSING_IDP_ASSOC = 65000,
  LIST_OBJECTS_FAILED = 66000,
  ARCHIVE_EXTRACT_FAILED = 67000,
  /** UPLOAD_IN_PROGRESS - Multipart uploading status codes */
  UPLOAD_IN_PROGRESS = 68000,
  UPLOAD_DONE = 68001,
  UPLOAD_FAILED = 68002,
  UPLOAD_UNEXPECTED_ERROR = 68003,
  UPLOAD_EXPIRED = 68004,
  UPLOAD_CANCELED = 68005,
  UPLOAD_CONFLICT = 68006,
  /** BILLING_INVALID_INFO - Billing related issues: 69xxx */
  BILLING_INVALID_INFO = 69000,
  BILLING_MISSING_TOKENS = 69001,
  /** LOG_ENTRIES_INVALID_REQUEST - Logs related issues: 70000; */
  LOG_ENTRIES_INVALID_REQUEST = 70000,
  /** INTERNAL_SERVER_ISSUE - Internal issues: 98xxx */
  INTERNAL_SERVER_ISSUE = 98004,
  INTERNAL_FETCHING_ISSUE = 98005,
  INTERNAL_DATABASE_ISSUE = 98006,
  INTERNAL_CONTEXT_CANCELED = 98008,
  INTERNAL_UNEXPECTED_TIMEOUT = 98009,
  INTERNAL_UNEXPECTED_V1 = 98010,
  INTERNAL_UNEXPECTED_PANIC = 98011,
  INTERNAL_UNEXPECTED_SPIRE = 98012,
  INTERNAL_REDIS_UNAVAILABLE = 98013,
  INTERNAL_RESOURCE_EXHAUSTED = 98014,
  INTERNAL_REDIS_UNCATEGORIZED = 98015,
  INTERNAL_AWS_UNCATEGORIZED = 98016,
  INTERNAL_AZURE_UNCATEGORIZED = 98017,
  INTERNAL_VECTORDB_UNCATEGORIZED = 98018,
  INTERNAL_ORACLE_UNCATEGORIZED = 98019,
  INTERNAL_VULTR_UNCATEGORIZED = 98020,
  INTERNAL_GCP_UNCATEGORIZED = 98021,
  /** CONN_UNCATEGORIZED - Uncategorized: 99xxx: move off as soon as known */
  CONN_UNCATEGORIZED = 99001,
  MODEL_UNCATEGORIZED = 99002,
  INPUT_UNCATEGORIZED = 99003,
  ANNOTATION_UNCATEGORIZED = 99004,
  BILLING_UNCATEGORIZED = 99005,
  INTERNAL_UNCATEGORIZED = 99009,
  /** BAD_REQUEST - Deprecated: migrate off to one of the internal issues */
  BAD_REQUEST = 90400,
  /** SERVER_ERROR - Deprecated: migrate off to one of the internal issues */
  SERVER_ERROR = 90500,
  UNRECOGNIZED = -1,
}

export function statusCodeFromJSON(object: any): StatusCode {
  switch (object) {
    case 0:
    case "ZERO":
      return StatusCode.ZERO;
    case 10000:
    case "SUCCESS":
      return StatusCode.SUCCESS;
    case 10010:
    case "MIXED_STATUS":
      return StatusCode.MIXED_STATUS;
    case 10020:
    case "FAILURE":
      return StatusCode.FAILURE;
    case 10030:
    case "TRY_AGAIN":
      return StatusCode.TRY_AGAIN;
    case 10040:
    case "NOT_IMPLEMENTED":
      return StatusCode.NOT_IMPLEMENTED;
    case 10050:
    case "MOVED":
      return StatusCode.MOVED;
    case 10060:
    case "TEAPOT":
      return StatusCode.TEAPOT;
    case 10070:
    case "ACCEPTED":
      return StatusCode.ACCEPTED;
    case 11000:
    case "CONN_ACCOUNT_ISSUES":
      return StatusCode.CONN_ACCOUNT_ISSUES;
    case 11001:
    case "CONN_TOKEN_INVALID":
      return StatusCode.CONN_TOKEN_INVALID;
    case 11002:
    case "CONN_CREDENTIALS_INVALID":
      return StatusCode.CONN_CREDENTIALS_INVALID;
    case 11003:
    case "CONN_EXCEED_HOURLY_LIMIT":
      return StatusCode.CONN_EXCEED_HOURLY_LIMIT;
    case 11004:
    case "CONN_EXCEED_MONTHLY_LIMIT":
      return StatusCode.CONN_EXCEED_MONTHLY_LIMIT;
    case 11005:
    case "CONN_THROTTLED":
      return StatusCode.CONN_THROTTLED;
    case 11006:
    case "CONN_EXCEEDS_LIMITS":
      return StatusCode.CONN_EXCEEDS_LIMITS;
    case 11007:
    case "CONN_INSUFFICIENT_SCOPES":
      return StatusCode.CONN_INSUFFICIENT_SCOPES;
    case 11008:
    case "CONN_KEY_INVALID":
      return StatusCode.CONN_KEY_INVALID;
    case 11009:
    case "CONN_KEY_NOT_FOUND":
      return StatusCode.CONN_KEY_NOT_FOUND;
    case 11100:
    case "CONN_BAD_REQUEST_FORMAT":
      return StatusCode.CONN_BAD_REQUEST_FORMAT;
    case 11101:
    case "CONN_DOES_NOT_EXIST":
      return StatusCode.CONN_DOES_NOT_EXIST;
    case 11102:
    case "CONN_INVALID_REQUEST":
      return StatusCode.CONN_INVALID_REQUEST;
    case 11103:
    case "CONN_METHOD_NOT_ALLOWED":
      return StatusCode.CONN_METHOD_NOT_ALLOWED;
    case 11104:
    case "CONN_NO_GDPR_CONSENT":
      return StatusCode.CONN_NO_GDPR_CONSENT;
    case 11105:
    case "CONN_INVALID_RANGE":
      return StatusCode.CONN_INVALID_RANGE;
    case 11200:
    case "CONN_AUTH_METHOD_DISABLED":
      return StatusCode.CONN_AUTH_METHOD_DISABLED;
    case 21100:
    case "MODEL_TRAINED":
      return StatusCode.MODEL_TRAINED;
    case 21101:
    case "MODEL_TRAINING":
      return StatusCode.MODEL_TRAINING;
    case 21102:
    case "MODEL_UNTRAINED":
      return StatusCode.MODEL_UNTRAINED;
    case 21103:
    case "MODEL_QUEUED_FOR_TRAINING":
      return StatusCode.MODEL_QUEUED_FOR_TRAINING;
    case 21104:
    case "MODEL_UPLOADING":
      return StatusCode.MODEL_UPLOADING;
    case 21105:
    case "MODEL_UPLOADING_FAILED":
      return StatusCode.MODEL_UPLOADING_FAILED;
    case 21106:
    case "MODEL_TRAINING_FAILED":
      return StatusCode.MODEL_TRAINING_FAILED;
    case 21107:
    case "MODEL_BUILDING":
      return StatusCode.MODEL_BUILDING;
    case 21108:
    case "MODEL_BUILDING_FAILED":
      return StatusCode.MODEL_BUILDING_FAILED;
    case 21109:
    case "MODEL_BUILD_UNEXPECTED_ERROR":
      return StatusCode.MODEL_BUILD_UNEXPECTED_ERROR;
    case 21110:
    case "MODEL_TRAINING_NO_DATA":
      return StatusCode.MODEL_TRAINING_NO_DATA;
    case 21111:
    case "MODEL_TRAINING_NO_POSITIVES":
      return StatusCode.MODEL_TRAINING_NO_POSITIVES;
    case 21112:
    case "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS":
      return StatusCode.MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS;
    case 21113:
    case "MODEL_TRAINING_TIMED_OUT":
      return StatusCode.MODEL_TRAINING_TIMED_OUT;
    case 21114:
    case "MODEL_TRAINING_WAITING_ERROR":
      return StatusCode.MODEL_TRAINING_WAITING_ERROR;
    case 21115:
    case "MODEL_TRAINING_UNKNOWN_ERROR":
      return StatusCode.MODEL_TRAINING_UNKNOWN_ERROR;
    case 21116:
    case "MODEL_TRAINING_MSG_REDELIVER":
      return StatusCode.MODEL_TRAINING_MSG_REDELIVER;
    case 21117:
    case "MODEL_TRAINING_INSUFFICIENT_DATA":
      return StatusCode.MODEL_TRAINING_INSUFFICIENT_DATA;
    case 21118:
    case "MODEL_TRAINING_INVALID_PARAMS":
      return StatusCode.MODEL_TRAINING_INVALID_PARAMS;
    case 21119:
    case "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED":
      return StatusCode.MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED;
    case 21150:
    case "MODEL_MODIFY_SUCCESS":
      return StatusCode.MODEL_MODIFY_SUCCESS;
    case 21151:
    case "MODEL_MODIFY_PENDING":
      return StatusCode.MODEL_MODIFY_PENDING;
    case 21152:
    case "MODEL_MODIFY_FAILED":
      return StatusCode.MODEL_MODIFY_FAILED;
    case 21200:
    case "MODEL_DOES_NOT_EXIST":
      return StatusCode.MODEL_DOES_NOT_EXIST;
    case 21201:
    case "MODEL_PERMISSION_DENIED":
      return StatusCode.MODEL_PERMISSION_DENIED;
    case 21202:
    case "MODEL_INVALID_ARGUMENT":
      return StatusCode.MODEL_INVALID_ARGUMENT;
    case 21203:
    case "MODEL_INVALID_REQUEST":
      return StatusCode.MODEL_INVALID_REQUEST;
    case 21300:
    case "MODEL_EVALUATED":
      return StatusCode.MODEL_EVALUATED;
    case 21301:
    case "MODEL_EVALUATING":
      return StatusCode.MODEL_EVALUATING;
    case 21302:
    case "MODEL_NOT_EVALUATED":
      return StatusCode.MODEL_NOT_EVALUATED;
    case 21303:
    case "MODEL_QUEUED_FOR_EVALUATION":
      return StatusCode.MODEL_QUEUED_FOR_EVALUATION;
    case 21310:
    case "MODEL_EVALUATION_TIMED_OUT":
      return StatusCode.MODEL_EVALUATION_TIMED_OUT;
    case 21311:
    case "MODEL_EVALUATION_WAITING_ERROR":
      return StatusCode.MODEL_EVALUATION_WAITING_ERROR;
    case 21312:
    case "MODEL_EVALUATION_UNKNOWN_ERROR":
      return StatusCode.MODEL_EVALUATION_UNKNOWN_ERROR;
    case 21313:
    case "MODEL_PREDICTION_FAILED":
      return StatusCode.MODEL_PREDICTION_FAILED;
    case 21314:
    case "MODEL_EVALUATION_MSG_REDELIVER":
      return StatusCode.MODEL_EVALUATION_MSG_REDELIVER;
    case 21315:
    case "MODEL_EVALUATION_NEED_LABELS":
      return StatusCode.MODEL_EVALUATION_NEED_LABELS;
    case 21316:
    case "MODEL_EVALUATION_NEED_INPUTS":
      return StatusCode.MODEL_EVALUATION_NEED_INPUTS;
    case 21317:
    case "MODEL_EVALUATION_FAILED":
      return StatusCode.MODEL_EVALUATION_FAILED;
    case 21350:
    case "MODEL_DEPLOYMENT_FAILED":
      return StatusCode.MODEL_DEPLOYMENT_FAILED;
    case 21351:
    case "MODEL_DEPLOYING":
      return StatusCode.MODEL_DEPLOYING;
    case 21352:
    case "MODEL_QUEUED_FOR_DEPLOYMENT":
      return StatusCode.MODEL_QUEUED_FOR_DEPLOYMENT;
    case 21353:
    case "MODEL_NOT_DEPLOYED":
      return StatusCode.MODEL_NOT_DEPLOYED;
    case 21354:
    case "MODEL_BUSY_PLEASE_RETRY":
      return StatusCode.MODEL_BUSY_PLEASE_RETRY;
    case 21355:
    case "MODEL_LOADING":
      return StatusCode.MODEL_LOADING;
    case 21400:
    case "MODEL_REFERENCE_INVALID_ARGUMENT":
      return StatusCode.MODEL_REFERENCE_INVALID_ARGUMENT;
    case 21420:
    case "MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT":
      return StatusCode.MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT;
    case 21500:
    case "MODEL_EXPORTED":
      return StatusCode.MODEL_EXPORTED;
    case 21501:
    case "MODEL_EXPORTING":
      return StatusCode.MODEL_EXPORTING;
    case 21502:
    case "MODEL_EXPORTING_FAILED":
      return StatusCode.MODEL_EXPORTING_FAILED;
    case 21503:
    case "MODEL_EXPORT_PENDING":
      return StatusCode.MODEL_EXPORT_PENDING;
    case 22001:
    case "WORKFLOW_NO_MATCHING_INPUT":
      return StatusCode.WORKFLOW_NO_MATCHING_INPUT;
    case 22002:
    case "WORKFLOW_REQUIRE_TRAINED_MODEL":
      return StatusCode.WORKFLOW_REQUIRE_TRAINED_MODEL;
    case 22100:
    case "WORKFLOW_DUPLICATE":
      return StatusCode.WORKFLOW_DUPLICATE;
    case 22101:
    case "WORKFLOW_UNSUPPORTED_FORMAT":
      return StatusCode.WORKFLOW_UNSUPPORTED_FORMAT;
    case 22102:
    case "WORKFLOW_DOES_NOT_EXIST":
      return StatusCode.WORKFLOW_DOES_NOT_EXIST;
    case 22103:
    case "WORKFLOW_PERMISSION_DENIED":
      return StatusCode.WORKFLOW_PERMISSION_DENIED;
    case 22104:
    case "WORKFLOW_INVALID_ARGUMENT":
      return StatusCode.WORKFLOW_INVALID_ARGUMENT;
    case 22105:
    case "WORKFLOW_INVALID_RECIPE":
      return StatusCode.WORKFLOW_INVALID_RECIPE;
    case 22106:
    case "WORKFLOW_INVALID_TEMPLATE":
      return StatusCode.WORKFLOW_INVALID_TEMPLATE;
    case 22107:
    case "WORKFLOW_INVALID_GRAPH":
      return StatusCode.WORKFLOW_INVALID_GRAPH;
    case 22108:
    case "WORKFLOW_INTERNAL_FAILURE":
      return StatusCode.WORKFLOW_INTERNAL_FAILURE;
    case 22999:
    case "WORKFLOW_INVALID_REQUEST":
      return StatusCode.WORKFLOW_INVALID_REQUEST;
    case 22150:
    case "WORKFLOW_MODIFY_SUCCESS":
      return StatusCode.WORKFLOW_MODIFY_SUCCESS;
    case 22151:
    case "WORKFLOW_MODIFY_PENDING":
      return StatusCode.WORKFLOW_MODIFY_PENDING;
    case 22152:
    case "WORKFLOW_MODIFY_FAILED":
      return StatusCode.WORKFLOW_MODIFY_FAILED;
    case 22153:
    case "WORKFLOW_REINDEX_FAILED":
      return StatusCode.WORKFLOW_REINDEX_FAILED;
    case 23150:
    case "CONCEPT_MODIFY_SUCCESS":
      return StatusCode.CONCEPT_MODIFY_SUCCESS;
    case 23151:
    case "CONCEPT_MODIFY_PENDING":
      return StatusCode.CONCEPT_MODIFY_PENDING;
    case 23152:
    case "CONCEPT_MODIFY_FAILED":
      return StatusCode.CONCEPT_MODIFY_FAILED;
    case 24150:
    case "ANNOTATION_SUCCESS":
      return StatusCode.ANNOTATION_SUCCESS;
    case 24151:
    case "ANNOTATION_PENDING":
      return StatusCode.ANNOTATION_PENDING;
    case 24152:
    case "ANNOTATION_FAILED":
      return StatusCode.ANNOTATION_FAILED;
    case 24154:
    case "ANNOTATION_UNKNOWN_STATUS":
      return StatusCode.ANNOTATION_UNKNOWN_STATUS;
    case 24155:
    case "ANNOTATION_INVALID_ARGUMENT":
      return StatusCode.ANNOTATION_INVALID_ARGUMENT;
    case 24156:
    case "ANNOTATION_PERMISSION_DENIED":
      return StatusCode.ANNOTATION_PERMISSION_DENIED;
    case 24157:
    case "ANNOTATION_AWAITING_REVIEW":
      return StatusCode.ANNOTATION_AWAITING_REVIEW;
    case 24159:
    case "ANNOTATION_AWAITING_CONSENSUS_REVIEW":
      return StatusCode.ANNOTATION_AWAITING_CONSENSUS_REVIEW;
    case 24158:
    case "ANNOTATION_REVIEW_DENIED":
      return StatusCode.ANNOTATION_REVIEW_DENIED;
    case 24250:
    case "ANNOTATION_MODIFY_SUCCESS":
      return StatusCode.ANNOTATION_MODIFY_SUCCESS;
    case 24251:
    case "ANNOTATION_MODIFY_PENDING":
      return StatusCode.ANNOTATION_MODIFY_PENDING;
    case 24252:
    case "ANNOTATION_MODIFY_FAILED":
      return StatusCode.ANNOTATION_MODIFY_FAILED;
    case 24300:
    case "ANNOTATION_TRACK_IDLE":
      return StatusCode.ANNOTATION_TRACK_IDLE;
    case 24301:
    case "ANNOTATION_TRACK_IN_PROGRESS":
      return StatusCode.ANNOTATION_TRACK_IN_PROGRESS;
    case 24302:
    case "ANNOTATION_TRACK_PENDING":
      return StatusCode.ANNOTATION_TRACK_PENDING;
    case 24303:
    case "ANNOTATION_TRACK_APPROVED":
      return StatusCode.ANNOTATION_TRACK_APPROVED;
    case 24304:
    case "ANNOTATION_TRACK_FAILED":
      return StatusCode.ANNOTATION_TRACK_FAILED;
    case 24900:
    case "METADATA_INVALID_PATCH_ARGUMENTS":
      return StatusCode.METADATA_INVALID_PATCH_ARGUMENTS;
    case 24901:
    case "METADATA_PARSING_ISSUE":
      return StatusCode.METADATA_PARSING_ISSUE;
    case 24902:
    case "METADATA_MANIPULATION_ISSUE":
      return StatusCode.METADATA_MANIPULATION_ISSUE;
    case 25000:
    case "TRAINER_JOB_STATE_NONE":
      return StatusCode.TRAINER_JOB_STATE_NONE;
    case 25001:
    case "TRAINER_JOB_STATE_QUEUED":
      return StatusCode.TRAINER_JOB_STATE_QUEUED;
    case 25002:
    case "TRAINER_JOB_STATE_RUNNING":
      return StatusCode.TRAINER_JOB_STATE_RUNNING;
    case 25003:
    case "TRAINER_JOB_STATE_COMPLETE":
      return StatusCode.TRAINER_JOB_STATE_COMPLETE;
    case 25004:
    case "TRAINER_JOB_STATE_ERROR":
      return StatusCode.TRAINER_JOB_STATE_ERROR;
    case 25150:
    case "DATA_DUMP_SUCCESS":
      return StatusCode.DATA_DUMP_SUCCESS;
    case 25151:
    case "DATA_DUMP_PENDING":
      return StatusCode.DATA_DUMP_PENDING;
    case 25152:
    case "DATA_DUMP_FAILED":
      return StatusCode.DATA_DUMP_FAILED;
    case 25153:
    case "DATA_DUMP_IN_PROGRESS":
      return StatusCode.DATA_DUMP_IN_PROGRESS;
    case 25154:
    case "DATA_DUMP_NO_DATA":
      return StatusCode.DATA_DUMP_NO_DATA;
    case 25155:
    case "DATA_DUMP_UNEXPECTED_ERROR":
      return StatusCode.DATA_DUMP_UNEXPECTED_ERROR;
    case 25170:
    case "DATA_DUMP_EXPORT_SUCCESS":
      return StatusCode.DATA_DUMP_EXPORT_SUCCESS;
    case 25171:
    case "DATA_DUMP_EXPORT_PENDING":
      return StatusCode.DATA_DUMP_EXPORT_PENDING;
    case 25172:
    case "DATA_DUMP_EXPORT_FAILED":
      return StatusCode.DATA_DUMP_EXPORT_FAILED;
    case 25173:
    case "DATA_DUMP_EXPORT_IN_PROGRESS":
      return StatusCode.DATA_DUMP_EXPORT_IN_PROGRESS;
    case 25174:
    case "DATA_DUMP_EXPORT_UNEXPECTED_ERROR":
      return StatusCode.DATA_DUMP_EXPORT_UNEXPECTED_ERROR;
    case 25200:
    case "APP_DUPLICATION_SUCCESS":
      return StatusCode.APP_DUPLICATION_SUCCESS;
    case 25201:
    case "APP_DUPLICATION_FAILED":
      return StatusCode.APP_DUPLICATION_FAILED;
    case 25202:
    case "APP_DUPLICATION_PENDING":
      return StatusCode.APP_DUPLICATION_PENDING;
    case 25203:
    case "APP_DUPLICATION_IN_PROGRESS":
      return StatusCode.APP_DUPLICATION_IN_PROGRESS;
    case 25204:
    case "APP_DUPLICATION_INVALID_REQUEST":
      return StatusCode.APP_DUPLICATION_INVALID_REQUEST;
    case 25300:
    case "MODULE_DOES_NOT_EXIST":
      return StatusCode.MODULE_DOES_NOT_EXIST;
    case 25301:
    case "MODULE_PERMISSION_DENIED":
      return StatusCode.MODULE_PERMISSION_DENIED;
    case 25302:
    case "MODULE_INVALID_ARGUMENT":
      return StatusCode.MODULE_INVALID_ARGUMENT;
    case 25303:
    case "MODULE_INVALID_REQUEST":
      return StatusCode.MODULE_INVALID_REQUEST;
    case 25400:
    case "BULK_OPERATION_SUCCESS":
      return StatusCode.BULK_OPERATION_SUCCESS;
    case 25401:
    case "BULK_OPERATION_FAILED":
      return StatusCode.BULK_OPERATION_FAILED;
    case 25402:
    case "BULK_OPERATION_PENDING":
      return StatusCode.BULK_OPERATION_PENDING;
    case 25403:
    case "BULK_OPERATION_IN_PROGRESS":
      return StatusCode.BULK_OPERATION_IN_PROGRESS;
    case 25404:
    case "BULK_OPERATION_INVALID_REQUEST":
      return StatusCode.BULK_OPERATION_INVALID_REQUEST;
    case 25405:
    case "BULK_OPERATION_CANCELLED":
      return StatusCode.BULK_OPERATION_CANCELLED;
    case 25406:
    case "BULK_OPERATION_UNEXPECTED_ERROR":
      return StatusCode.BULK_OPERATION_UNEXPECTED_ERROR;
    case 25600:
    case "RUNNER_DOES_NOT_EXIST":
      return StatusCode.RUNNER_DOES_NOT_EXIST;
    case 25601:
    case "RUNNER_PERMISSION_DENIED":
      return StatusCode.RUNNER_PERMISSION_DENIED;
    case 25602:
    case "RUNNER_INVALID_ARGUMENT":
      return StatusCode.RUNNER_INVALID_ARGUMENT;
    case 25603:
    case "RUNNER_INVALID_REQUEST":
      return StatusCode.RUNNER_INVALID_REQUEST;
    case 25604:
    case "RUNNER_NEEDS_RETRY":
      return StatusCode.RUNNER_NEEDS_RETRY;
    case 25605:
    case "RUNNER_STREAM_START":
      return StatusCode.RUNNER_STREAM_START;
    case 25606:
    case "RUNNER_STREAM_END":
      return StatusCode.RUNNER_STREAM_END;
    case 25607:
    case "RUNNER_ITEM_CANCELLED":
      return StatusCode.RUNNER_ITEM_CANCELLED;
    case 25608:
    case "RUNNER_PROCESSING_FAILED":
      return StatusCode.RUNNER_PROCESSING_FAILED;
    case 25700:
    case "NODEPOOL_DOES_NOT_EXIST":
      return StatusCode.NODEPOOL_DOES_NOT_EXIST;
    case 25701:
    case "NODEPOOL_INVALID_ARGUMENT":
      return StatusCode.NODEPOOL_INVALID_ARGUMENT;
    case 25702:
    case "NODEPOOL_INVALID_REQUEST":
      return StatusCode.NODEPOOL_INVALID_REQUEST;
    case 25800:
    case "COMPUTE_CLUSTER_DOES_NOT_EXIST":
      return StatusCode.COMPUTE_CLUSTER_DOES_NOT_EXIST;
    case 25801:
    case "COMPUTE_CLUSTER_INVALID_ARGUMENT":
      return StatusCode.COMPUTE_CLUSTER_INVALID_ARGUMENT;
    case 25802:
    case "COMPUTE_CLUSTER_INVALID_REQUEST":
      return StatusCode.COMPUTE_CLUSTER_INVALID_REQUEST;
    case 25900:
    case "DEPLOYMENT_DOES_NOT_EXIST":
      return StatusCode.DEPLOYMENT_DOES_NOT_EXIST;
    case 25901:
    case "DEPLOYMENT_INVALID_ARGUMENT":
      return StatusCode.DEPLOYMENT_INVALID_ARGUMENT;
    case 25902:
    case "DEPLOYMENT_INVALID_REQUEST":
      return StatusCode.DEPLOYMENT_INVALID_REQUEST;
    case 26000:
    case "INSTANCE_TYPE_DOES_NOT_EXIST":
      return StatusCode.INSTANCE_TYPE_DOES_NOT_EXIST;
    case 26001:
    case "INSTANCE_TYPE_INVALID_ARGUMENT":
      return StatusCode.INSTANCE_TYPE_INVALID_ARGUMENT;
    case 26002:
    case "INSTANCE_TYPE_INVALID_REQUEST":
      return StatusCode.INSTANCE_TYPE_INVALID_REQUEST;
    case 26100:
    case "COMPUTE_PLANE_METRICS_INVALID_REQUEST":
      return StatusCode.COMPUTE_PLANE_METRICS_INVALID_REQUEST;
    case 26200:
    case "PIPELINE_STEP_DOES_NOT_EXIST":
      return StatusCode.PIPELINE_STEP_DOES_NOT_EXIST;
    case 26201:
    case "PIPELINE_STEP_INVALID_ARGUMENT":
      return StatusCode.PIPELINE_STEP_INVALID_ARGUMENT;
    case 26202:
    case "PIPELINE_STEP_INVALID_REQUEST":
      return StatusCode.PIPELINE_STEP_INVALID_REQUEST;
    case 26203:
    case "PIPELINE_STEP_UPLOADING":
      return StatusCode.PIPELINE_STEP_UPLOADING;
    case 26204:
    case "PIPELINE_STEP_UPLOADING_FAILED":
      return StatusCode.PIPELINE_STEP_UPLOADING_FAILED;
    case 26205:
    case "PIPELINE_STEP_BUILDING":
      return StatusCode.PIPELINE_STEP_BUILDING;
    case 26206:
    case "PIPELINE_STEP_BUILDING_FAILED":
      return StatusCode.PIPELINE_STEP_BUILDING_FAILED;
    case 26207:
    case "PIPELINE_STEP_BUILD_UNEXPECTED_ERROR":
      return StatusCode.PIPELINE_STEP_BUILD_UNEXPECTED_ERROR;
    case 26208:
    case "PIPELINE_STEP_READY":
      return StatusCode.PIPELINE_STEP_READY;
    case 26209:
    case "PIPELINE_STEP_NOT_READY":
      return StatusCode.PIPELINE_STEP_NOT_READY;
    case 26300:
    case "PIPELINE_DOES_NOT_EXIST":
      return StatusCode.PIPELINE_DOES_NOT_EXIST;
    case 26301:
    case "PIPELINE_INVALID_ARGUMENT":
      return StatusCode.PIPELINE_INVALID_ARGUMENT;
    case 26302:
    case "PIPELINE_INVALID_REQUEST":
      return StatusCode.PIPELINE_INVALID_REQUEST;
    case 30000:
    case "INPUT_SUCCESS":
      return StatusCode.INPUT_SUCCESS;
    case 30001:
    case "INPUT_PENDING":
      return StatusCode.INPUT_PENDING;
    case 30002:
    case "INPUT_FAILED":
      return StatusCode.INPUT_FAILED;
    case 30003:
    case "INPUT_IN_PROGRESS":
      return StatusCode.INPUT_IN_PROGRESS;
    case 30000:
    case "INPUT_DOWNLOAD_SUCCESS":
      return StatusCode.INPUT_DOWNLOAD_SUCCESS;
    case 30001:
    case "INPUT_DOWNLOAD_PENDING":
      return StatusCode.INPUT_DOWNLOAD_PENDING;
    case 30002:
    case "INPUT_DOWNLOAD_FAILED":
      return StatusCode.INPUT_DOWNLOAD_FAILED;
    case 30003:
    case "INPUT_DOWNLOAD_IN_PROGRESS":
      return StatusCode.INPUT_DOWNLOAD_IN_PROGRESS;
    case 30004:
    case "INPUT_STATUS_UPDATE_FAILED":
      return StatusCode.INPUT_STATUS_UPDATE_FAILED;
    case 30005:
    case "INPUT_DELETE_FAILED":
      return StatusCode.INPUT_DELETE_FAILED;
    case 30100:
    case "INPUT_DUPLICATE":
      return StatusCode.INPUT_DUPLICATE;
    case 30101:
    case "INPUT_UNSUPPORTED_FORMAT":
      return StatusCode.INPUT_UNSUPPORTED_FORMAT;
    case 30102:
    case "INPUT_DOES_NOT_EXIST":
      return StatusCode.INPUT_DOES_NOT_EXIST;
    case 30103:
    case "INPUT_PERMISSION_DENIED":
      return StatusCode.INPUT_PERMISSION_DENIED;
    case 30104:
    case "INPUT_INVALID_ARGUMENT":
      return StatusCode.INPUT_INVALID_ARGUMENT;
    case 30105:
    case "INPUT_OVER_LIMIT":
      return StatusCode.INPUT_OVER_LIMIT;
    case 30106:
    case "INPUT_INVALID_URL":
      return StatusCode.INPUT_INVALID_URL;
    case 30200:
    case "INPUT_MODIFY_SUCCESS":
      return StatusCode.INPUT_MODIFY_SUCCESS;
    case 30201:
    case "INPUT_MODIFY_PENDING":
      return StatusCode.INPUT_MODIFY_PENDING;
    case 30203:
    case "INPUT_MODIFY_FAILED":
      return StatusCode.INPUT_MODIFY_FAILED;
    case 30210:
    case "INPUT_STORAGE_HOST_FAILED":
      return StatusCode.INPUT_STORAGE_HOST_FAILED;
    case 30300:
    case "ALL_INPUT_INVALID_BYTES":
      return StatusCode.ALL_INPUT_INVALID_BYTES;
    case 30400:
    case "INPUT_CLUSTER_SUCCESS":
      return StatusCode.INPUT_CLUSTER_SUCCESS;
    case 30401:
    case "INPUT_CLUSTER_PENDING":
      return StatusCode.INPUT_CLUSTER_PENDING;
    case 30402:
    case "INPUT_CLUSTER_FAILED":
      return StatusCode.INPUT_CLUSTER_FAILED;
    case 30403:
    case "INPUT_CLUSTER_IN_PROGRESS":
      return StatusCode.INPUT_CLUSTER_IN_PROGRESS;
    case 30500:
    case "INPUT_REINDEX_SUCCESS":
      return StatusCode.INPUT_REINDEX_SUCCESS;
    case 30501:
    case "INPUT_REINDEX_PENDING":
      return StatusCode.INPUT_REINDEX_PENDING;
    case 30502:
    case "INPUT_REINDEX_FAILED":
      return StatusCode.INPUT_REINDEX_FAILED;
    case 30503:
    case "INPUT_REINDEX_IN_PROGRESS":
      return StatusCode.INPUT_REINDEX_IN_PROGRESS;
    case 31000:
    case "INPUT_VIDEO_DOWNLOAD_SUCCESS":
      return StatusCode.INPUT_VIDEO_DOWNLOAD_SUCCESS;
    case 31001:
    case "INPUT_VIDEO_DOWNLOAD_PENDING":
      return StatusCode.INPUT_VIDEO_DOWNLOAD_PENDING;
    case 31002:
    case "INPUT_VIDEO_DOWNLOAD_FAILED":
      return StatusCode.INPUT_VIDEO_DOWNLOAD_FAILED;
    case 31100:
    case "INPUT_VIDEO_DUPLICATE":
      return StatusCode.INPUT_VIDEO_DUPLICATE;
    case 31101:
    case "INPUT_VIDEO_UNSUPPORTED_FORMAT":
      return StatusCode.INPUT_VIDEO_UNSUPPORTED_FORMAT;
    case 31102:
    case "INPUT_VIDEO_DOES_NOT_EXIST":
      return StatusCode.INPUT_VIDEO_DOES_NOT_EXIST;
    case 31103:
    case "INPUT_VIDEO_PERMISSION_DENIED":
      return StatusCode.INPUT_VIDEO_PERMISSION_DENIED;
    case 31104:
    case "INPUT_VIDEO_INVALID_ARGUMENT":
      return StatusCode.INPUT_VIDEO_INVALID_ARGUMENT;
    case 31105:
    case "INPUT_VIDEO_OVER_LIMIT":
      return StatusCode.INPUT_VIDEO_OVER_LIMIT;
    case 31106:
    case "INPUT_VIDEO_INVALID_URL":
      return StatusCode.INPUT_VIDEO_INVALID_URL;
    case 31200:
    case "INPUT_VIDEO_MODIFY_SUCCESS":
      return StatusCode.INPUT_VIDEO_MODIFY_SUCCESS;
    case 31201:
    case "INPUT_VIDEO_MODIFY_PENDING":
      return StatusCode.INPUT_VIDEO_MODIFY_PENDING;
    case 31203:
    case "INPUT_VIDEO_MODIFY_FAILED":
      return StatusCode.INPUT_VIDEO_MODIFY_FAILED;
    case 31210:
    case "INPUT_VIDEO_STORAGE_HOST_FAILED":
      return StatusCode.INPUT_VIDEO_STORAGE_HOST_FAILED;
    case 31300:
    case "ALL_INPUT_VIDEOS_INVALID_BYTES":
      return StatusCode.ALL_INPUT_VIDEOS_INVALID_BYTES;
    case 31400:
    case "INPUT_VIDEO_PROCESSING_SUCCESS":
      return StatusCode.INPUT_VIDEO_PROCESSING_SUCCESS;
    case 31410:
    case "INPUT_VIDEO_PROCESSING_PENDING":
      return StatusCode.INPUT_VIDEO_PROCESSING_PENDING;
    case 31420:
    case "INPUT_VIDEO_PROCESSING_FAILED":
      return StatusCode.INPUT_VIDEO_PROCESSING_FAILED;
    case 31430:
    case "INPUT_VIDEO_STORAGE_INCONSISTENCY":
      return StatusCode.INPUT_VIDEO_STORAGE_INCONSISTENCY;
    case 31440:
    case "INPUT_VIDEO_STORAGE_FAILURE":
      return StatusCode.INPUT_VIDEO_STORAGE_FAILURE;
    case 31450:
    case "INPUT_VIDEO_URL_GENERATION_FAILURE":
      return StatusCode.INPUT_VIDEO_URL_GENERATION_FAILURE;
    case 39996:
    case "INPUT_CONNECTION_FAILED":
      return StatusCode.INPUT_CONNECTION_FAILED;
    case 39997:
    case "REQUEST_DISABLED_FOR_MAINTENANCE":
      return StatusCode.REQUEST_DISABLED_FOR_MAINTENANCE;
    case 39998:
    case "INPUT_WRITES_DISABLED_FOR_MAINTENANCE":
      return StatusCode.INPUT_WRITES_DISABLED_FOR_MAINTENANCE;
    case 39999:
    case "INPUT_INVALID_REQUEST":
      return StatusCode.INPUT_INVALID_REQUEST;
    case 40001:
    case "PREDICT_INVALID_REQUEST":
      return StatusCode.PREDICT_INVALID_REQUEST;
    case 40002:
    case "SEARCH_INVALID_REQUEST":
      return StatusCode.SEARCH_INVALID_REQUEST;
    case 40003:
    case "CONCEPTS_INVALID_REQUEST":
      return StatusCode.CONCEPTS_INVALID_REQUEST;
    case 40004:
    case "STATS_INVALID_REQUEST":
      return StatusCode.STATS_INVALID_REQUEST;
    case 40010:
    case "DATABASE_DUPLICATE_KEY":
      return StatusCode.DATABASE_DUPLICATE_KEY;
    case 40011:
    case "DATABASE_STATEMENT_TIMEOUT":
      return StatusCode.DATABASE_STATEMENT_TIMEOUT;
    case 40012:
    case "DATABASE_INVALID_ROWS_AFFECTED":
      return StatusCode.DATABASE_INVALID_ROWS_AFFECTED;
    case 40013:
    case "DATABASE_DEADLOCK_DETECTED":
      return StatusCode.DATABASE_DEADLOCK_DETECTED;
    case 40014:
    case "DATABASE_FAIL_TASK":
      return StatusCode.DATABASE_FAIL_TASK;
    case 40015:
    case "DATABASE_FAIL_TO_GET_CONNECTIONS":
      return StatusCode.DATABASE_FAIL_TO_GET_CONNECTIONS;
    case 40016:
    case "DATABASE_TOO_MANY_CLIENTS":
      return StatusCode.DATABASE_TOO_MANY_CLIENTS;
    case 40017:
    case "DATABASE_CONSTRAINT_VIOLATED":
      return StatusCode.DATABASE_CONSTRAINT_VIOLATED;
    case 40021:
    case "DATABASE_CANCELED":
      return StatusCode.DATABASE_CANCELED;
    case 40020:
    case "ASYNC_WORKER_MULTI_ERRORS":
      return StatusCode.ASYNC_WORKER_MULTI_ERRORS;
    case 40030:
    case "RPC_REQUEST_QUEUE_FULL":
      return StatusCode.RPC_REQUEST_QUEUE_FULL;
    case 40031:
    case "RPC_SERVER_UNAVAILABLE":
      return StatusCode.RPC_SERVER_UNAVAILABLE;
    case 40032:
    case "RPC_REQUEST_TIMEOUT":
      return StatusCode.RPC_REQUEST_TIMEOUT;
    case 40033:
    case "RPC_MAX_MESSAGE_SIZE_EXCEEDED":
      return StatusCode.RPC_MAX_MESSAGE_SIZE_EXCEEDED;
    case 40035:
    case "RPC_CANCELED":
      return StatusCode.RPC_CANCELED;
    case 40036:
    case "RPC_UNKNOWN_METHOD":
      return StatusCode.RPC_UNKNOWN_METHOD;
    case 40037:
    case "REQUEST_CANCELED_BY_USER":
      return StatusCode.REQUEST_CANCELED_BY_USER;
    case 43040:
    case "CLUSTER_INTERNAL_FAILURE":
      return StatusCode.CLUSTER_INTERNAL_FAILURE;
    case 40034:
    case "EXTERNAL_CONNECTION_ERROR":
      return StatusCode.EXTERNAL_CONNECTION_ERROR;
    case 40050:
    case "QUERY_INVALID_SYNTAX":
      return StatusCode.QUERY_INVALID_SYNTAX;
    case 41000:
    case "QUEUE_CONN_ERROR":
      return StatusCode.QUEUE_CONN_ERROR;
    case 41002:
    case "QUEUE_CLOSE_REQUEST_TIMEOUT":
      return StatusCode.QUEUE_CLOSE_REQUEST_TIMEOUT;
    case 41003:
    case "QUEUE_CONN_CLOSED":
      return StatusCode.QUEUE_CONN_CLOSED;
    case 41004:
    case "QUEUE_PUBLISH_ACK_TIMEOUT":
      return StatusCode.QUEUE_PUBLISH_ACK_TIMEOUT;
    case 41005:
    case "QUEUE_PUBLISH_ERROR":
      return StatusCode.QUEUE_PUBLISH_ERROR;
    case 41006:
    case "QUEUE_SUBSCRIPTION_TIMEOUT":
      return StatusCode.QUEUE_SUBSCRIPTION_TIMEOUT;
    case 41007:
    case "QUEUE_SUBSCRIPTION_ERROR":
      return StatusCode.QUEUE_SUBSCRIPTION_ERROR;
    case 41008:
    case "QUEUE_MARSHALLING_FAILED":
      return StatusCode.QUEUE_MARSHALLING_FAILED;
    case 41009:
    case "QUEUE_UNMARSHALLING_FAILED":
      return StatusCode.QUEUE_UNMARSHALLING_FAILED;
    case 41010:
    case "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED":
      return StatusCode.QUEUE_MAX_MSG_REDELIVERY_EXCEEDED;
    case 41011:
    case "QUEUE_ACK_FAILURE":
      return StatusCode.QUEUE_ACK_FAILURE;
    case 41100:
    case "SQS_OVERLIMIT":
      return StatusCode.SQS_OVERLIMIT;
    case 41101:
    case "SQS_INVALID_RECEIPT_HANDLE":
      return StatusCode.SQS_INVALID_RECEIPT_HANDLE;
    case 41102:
    case "SQS_UNKNOWN":
      return StatusCode.SQS_UNKNOWN;
    case 43001:
    case "SEARCH_INTERNAL_FAILURE":
      return StatusCode.SEARCH_INTERNAL_FAILURE;
    case 43002:
    case "SEARCH_PROJECTION_FAILURE":
      return StatusCode.SEARCH_PROJECTION_FAILURE;
    case 43003:
    case "SEARCH_PREDICTION_FAILURE":
      return StatusCode.SEARCH_PREDICTION_FAILURE;
    case 43004:
    case "SEARCH_BY_NOT_FULLY_INDEXED_INPUT":
      return StatusCode.SEARCH_BY_NOT_FULLY_INDEXED_INPUT;
    case 43005:
    case "SAVED_SEARCH_MODIFY_FAILED":
      return StatusCode.SAVED_SEARCH_MODIFY_FAILED;
    case 43006:
    case "SEARCH_COUNTS_UNAVAILABLE":
      return StatusCode.SEARCH_COUNTS_UNAVAILABLE;
    case 43100:
    case "EVALUATION_QUEUED":
      return StatusCode.EVALUATION_QUEUED;
    case 43101:
    case "EVALUATION_IN_PROGRESS":
      return StatusCode.EVALUATION_IN_PROGRESS;
    case 43102:
    case "EVALUATION_SUCCESS":
      return StatusCode.EVALUATION_SUCCESS;
    case 43103:
    case "EVALUATION_FAILED_TO_RETRIEVE_DATA":
      return StatusCode.EVALUATION_FAILED_TO_RETRIEVE_DATA;
    case 43104:
    case "EVALUATION_INVALID_ARGUMENT":
      return StatusCode.EVALUATION_INVALID_ARGUMENT;
    case 43105:
    case "EVALUATION_FAILED":
      return StatusCode.EVALUATION_FAILED;
    case 43106:
    case "EVALUATION_PENDING":
      return StatusCode.EVALUATION_PENDING;
    case 43107:
    case "EVALUATION_TIMED_OUT":
      return StatusCode.EVALUATION_TIMED_OUT;
    case 43108:
    case "EVALUATION_UNEXPECTED_ERROR":
      return StatusCode.EVALUATION_UNEXPECTED_ERROR;
    case 43109:
    case "EVALUATION_MIXED":
      return StatusCode.EVALUATION_MIXED;
    case 44001:
    case "STRIPE_EVENT_ERROR":
      return StatusCode.STRIPE_EVENT_ERROR;
    case 44002:
    case "STRIPE_UNEXPECTED_ERROR":
      return StatusCode.STRIPE_UNEXPECTED_ERROR;
    case 45001:
    case "CACHE_MISS":
      return StatusCode.CACHE_MISS;
    case 45002:
    case "REDIS_SCRIPT_EXITED_WITH_FAILURE":
      return StatusCode.REDIS_SCRIPT_EXITED_WITH_FAILURE;
    case 45003:
    case "REDIS_STREAM_ERR":
      return StatusCode.REDIS_STREAM_ERR;
    case 45004:
    case "REDIS_NO_CONSUMERS":
      return StatusCode.REDIS_NO_CONSUMERS;
    case 45005:
    case "REDIS_STREAM_BACKOFF":
      return StatusCode.REDIS_STREAM_BACKOFF;
    case 46001:
    case "SIGNUP_EVENT_ERROR":
      return StatusCode.SIGNUP_EVENT_ERROR;
    case 46002:
    case "SIGNUP_FLAGGED":
      return StatusCode.SIGNUP_FLAGGED;
    case 46003:
    case "FILETYPE_UNSUPPORTED":
      return StatusCode.FILETYPE_UNSUPPORTED;
    case 46004:
    case "LOGIN_EVENT_ERROR":
      return StatusCode.LOGIN_EVENT_ERROR;
    case 46005:
    case "SIFT_UNCATEGORIZED_ERROR":
      return StatusCode.SIFT_UNCATEGORIZED_ERROR;
    case 47001:
    case "APP_COUNT_INVALID_MESSAGE":
      return StatusCode.APP_COUNT_INVALID_MESSAGE;
    case 47002:
    case "APP_COUNT_UPDATE_INCREMENT_FAILED":
      return StatusCode.APP_COUNT_UPDATE_INCREMENT_FAILED;
    case 47003:
    case "APP_COUNT_REBUILD_FAILED":
      return StatusCode.APP_COUNT_REBUILD_FAILED;
    case 47004:
    case "APP_COUNT_INTERNAL_FAILURE":
      return StatusCode.APP_COUNT_INTERNAL_FAILURE;
    case 47101:
    case "MP_DOWNLOAD_ERROR":
      return StatusCode.MP_DOWNLOAD_ERROR;
    case 47102:
    case "MP_RESOLVE_DNS_ERROR":
      return StatusCode.MP_RESOLVE_DNS_ERROR;
    case 47103:
    case "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR":
      return StatusCode.MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR;
    case 47104:
    case "MP_IMAGE_DECODE_ERROR":
      return StatusCode.MP_IMAGE_DECODE_ERROR;
    case 47105:
    case "MP_INVALID_ARGUMENT":
      return StatusCode.MP_INVALID_ARGUMENT;
    case 47106:
    case "MP_IMAGE_PROCESSING_ERROR":
      return StatusCode.MP_IMAGE_PROCESSING_ERROR;
    case 47201:
    case "DATATIER_CONN_ERROR":
      return StatusCode.DATATIER_CONN_ERROR;
    case 50001:
    case "USER_CONSENT_FACE":
      return StatusCode.USER_CONSENT_FACE;
    case 51000:
    case "WORKER_MISSING":
      return StatusCode.WORKER_MISSING;
    case 51001:
    case "WORKER_ACTIVE":
      return StatusCode.WORKER_ACTIVE;
    case 51002:
    case "WORKER_INACTIVE":
      return StatusCode.WORKER_INACTIVE;
    case 52000:
    case "COLLECTOR_MISSING":
      return StatusCode.COLLECTOR_MISSING;
    case 52001:
    case "COLLECTOR_ACTIVE":
      return StatusCode.COLLECTOR_ACTIVE;
    case 52002:
    case "COLLECTOR_INACTIVE":
      return StatusCode.COLLECTOR_INACTIVE;
    case 52003:
    case "COLLECTOR_POST_INPUT_FAILED":
      return StatusCode.COLLECTOR_POST_INPUT_FAILED;
    case 53001:
    case "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST":
      return StatusCode.SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST;
    case 54001:
    case "TASK_IN_PROGRESS":
      return StatusCode.TASK_IN_PROGRESS;
    case 54002:
    case "TASK_DONE":
      return StatusCode.TASK_DONE;
    case 54003:
    case "TASK_WONT_DO":
      return StatusCode.TASK_WONT_DO;
    case 54005:
    case "TASK_FAILED":
      return StatusCode.TASK_FAILED;
    case 54006:
    case "TASK_IDLE":
      return StatusCode.TASK_IDLE;
    case 54100:
    case "TASK_CONFLICT":
      return StatusCode.TASK_CONFLICT;
    case 54101:
    case "TASK_NOT_IMPLEMENTED":
      return StatusCode.TASK_NOT_IMPLEMENTED;
    case 54102:
    case "TASK_MISSING":
      return StatusCode.TASK_MISSING;
    case 54103:
    case "TASK_PERMISSION_DENIED":
      return StatusCode.TASK_PERMISSION_DENIED;
    case 54200:
    case "TASK_ASSIGNMENT_SUCCESS":
      return StatusCode.TASK_ASSIGNMENT_SUCCESS;
    case 54201:
    case "TASK_ASSIGNMENT_PENDING":
      return StatusCode.TASK_ASSIGNMENT_PENDING;
    case 54202:
    case "TASK_ASSIGNMENT_AWAITING_REVIEW":
      return StatusCode.TASK_ASSIGNMENT_AWAITING_REVIEW;
    case 54203:
    case "TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW":
      return StatusCode.TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW;
    case 54204:
    case "TASK_ASSIGNMENT_REJECTED":
      return StatusCode.TASK_ASSIGNMENT_REJECTED;
    case 54300:
    case "TASK_ASSIGNMENT_REVIEW_SUCCESS":
      return StatusCode.TASK_ASSIGNMENT_REVIEW_SUCCESS;
    case 54301:
    case "TASK_ASSIGNMENT_REVIEW_PENDING":
      return StatusCode.TASK_ASSIGNMENT_REVIEW_PENDING;
    case 54302:
    case "TASK_ASSIGNMENT_REVIEW_DISMISSED":
      return StatusCode.TASK_ASSIGNMENT_REVIEW_DISMISSED;
    case 55001:
    case "LABEL_ORDER_PENDING":
      return StatusCode.LABEL_ORDER_PENDING;
    case 55002:
    case "LABEL_ORDER_IN_PROGRESS":
      return StatusCode.LABEL_ORDER_IN_PROGRESS;
    case 55003:
    case "LABEL_ORDER_SUCCESS":
      return StatusCode.LABEL_ORDER_SUCCESS;
    case 55004:
    case "LABEL_ORDER_CANCELED":
      return StatusCode.LABEL_ORDER_CANCELED;
    case 60000:
    case "LICENSE_ACTIVE":
      return StatusCode.LICENSE_ACTIVE;
    case 60001:
    case "LICENSE_DOES_NOT_EXIST":
      return StatusCode.LICENSE_DOES_NOT_EXIST;
    case 60002:
    case "LICENSE_NEED_UPDATE":
      return StatusCode.LICENSE_NEED_UPDATE;
    case 60003:
    case "LICENSE_EXPIRED":
      return StatusCode.LICENSE_EXPIRED;
    case 60004:
    case "LICENSE_REVOKED":
      return StatusCode.LICENSE_REVOKED;
    case 60005:
    case "LICENSE_DELETED":
      return StatusCode.LICENSE_DELETED;
    case 60006:
    case "LICENSE_VOLUME_EXCEEDED":
      return StatusCode.LICENSE_VOLUME_EXCEEDED;
    case 61000:
    case "PASSWORD_VALIDATION_SUCCESS":
      return StatusCode.PASSWORD_VALIDATION_SUCCESS;
    case 61001:
    case "PASSWORD_VALIDATION_FAILED":
      return StatusCode.PASSWORD_VALIDATION_FAILED;
    case 61002:
    case "PASSWORDPOLICY_INVALID_ARGUMENT":
      return StatusCode.PASSWORDPOLICY_INVALID_ARGUMENT;
    case 62000:
    case "FEATUREFLAG_CONFIG_NOT_FOUND":
      return StatusCode.FEATUREFLAG_CONFIG_NOT_FOUND;
    case 62001:
    case "FEATUREFLAG_INVALID_ARGUMENT":
      return StatusCode.FEATUREFLAG_INVALID_ARGUMENT;
    case 62002:
    case "FEATUREFLAG_BLOCKED":
      return StatusCode.FEATUREFLAG_BLOCKED;
    case 62003:
    case "FEATUREFLAG_NOT_FOUND":
      return StatusCode.FEATUREFLAG_NOT_FOUND;
    case 63000:
    case "MAINTENANCE_SUCCESS":
      return StatusCode.MAINTENANCE_SUCCESS;
    case 63001:
    case "MAINTENANCE_FAILED":
      return StatusCode.MAINTENANCE_FAILED;
    case 64005:
    case "DATASET_VERSION_PENDING":
      return StatusCode.DATASET_VERSION_PENDING;
    case 64010:
    case "DATASET_VERSION_IN_PROGRESS":
      return StatusCode.DATASET_VERSION_IN_PROGRESS;
    case 64015:
    case "DATASET_VERSION_READY":
      return StatusCode.DATASET_VERSION_READY;
    case 64020:
    case "DATASET_VERSION_FAILURE":
      return StatusCode.DATASET_VERSION_FAILURE;
    case 64025:
    case "DATASET_VERSION_UNEXPECTED_ERROR":
      return StatusCode.DATASET_VERSION_UNEXPECTED_ERROR;
    case 64030:
    case "DATASET_VERSION_CONFLICT":
      return StatusCode.DATASET_VERSION_CONFLICT;
    case 64100:
    case "DATASET_INPUT_SUCCESS":
      return StatusCode.DATASET_INPUT_SUCCESS;
    case 64101:
    case "DATASET_INPUT_DUPLICATE":
      return StatusCode.DATASET_INPUT_DUPLICATE;
    case 64200:
    case "DATASET_VERSION_EXPORT_SUCCESS":
      return StatusCode.DATASET_VERSION_EXPORT_SUCCESS;
    case 64201:
    case "DATASET_VERSION_EXPORT_PENDING":
      return StatusCode.DATASET_VERSION_EXPORT_PENDING;
    case 64202:
    case "DATASET_VERSION_EXPORT_FAILED":
      return StatusCode.DATASET_VERSION_EXPORT_FAILED;
    case 64203:
    case "DATASET_VERSION_EXPORT_IN_PROGRESS":
      return StatusCode.DATASET_VERSION_EXPORT_IN_PROGRESS;
    case 64204:
    case "DATASET_VERSION_EXPORT_UNEXPECTED_ERROR":
      return StatusCode.DATASET_VERSION_EXPORT_UNEXPECTED_ERROR;
    case 64000:
    case "JOB_QUEUED":
      return StatusCode.JOB_QUEUED;
    case 64001:
    case "JOB_RUNNING":
      return StatusCode.JOB_RUNNING;
    case 64002:
    case "JOB_COMPLETED":
      return StatusCode.JOB_COMPLETED;
    case 64003:
    case "JOB_FAILED":
      return StatusCode.JOB_FAILED;
    case 64004:
    case "JOB_CANCELLED":
      return StatusCode.JOB_CANCELLED;
    case 64006:
    case "JOB_UNEXPECTED_ERROR":
      return StatusCode.JOB_UNEXPECTED_ERROR;
    case 64007:
    case "JOB_CONFLICT":
      return StatusCode.JOB_CONFLICT;
    case 65000:
    case "AUTH_MISSING_IDP_ASSOC":
      return StatusCode.AUTH_MISSING_IDP_ASSOC;
    case 66000:
    case "LIST_OBJECTS_FAILED":
      return StatusCode.LIST_OBJECTS_FAILED;
    case 67000:
    case "ARCHIVE_EXTRACT_FAILED":
      return StatusCode.ARCHIVE_EXTRACT_FAILED;
    case 68000:
    case "UPLOAD_IN_PROGRESS":
      return StatusCode.UPLOAD_IN_PROGRESS;
    case 68001:
    case "UPLOAD_DONE":
      return StatusCode.UPLOAD_DONE;
    case 68002:
    case "UPLOAD_FAILED":
      return StatusCode.UPLOAD_FAILED;
    case 68003:
    case "UPLOAD_UNEXPECTED_ERROR":
      return StatusCode.UPLOAD_UNEXPECTED_ERROR;
    case 68004:
    case "UPLOAD_EXPIRED":
      return StatusCode.UPLOAD_EXPIRED;
    case 68005:
    case "UPLOAD_CANCELED":
      return StatusCode.UPLOAD_CANCELED;
    case 68006:
    case "UPLOAD_CONFLICT":
      return StatusCode.UPLOAD_CONFLICT;
    case 69000:
    case "BILLING_INVALID_INFO":
      return StatusCode.BILLING_INVALID_INFO;
    case 69001:
    case "BILLING_MISSING_TOKENS":
      return StatusCode.BILLING_MISSING_TOKENS;
    case 70000:
    case "LOG_ENTRIES_INVALID_REQUEST":
      return StatusCode.LOG_ENTRIES_INVALID_REQUEST;
    case 98004:
    case "INTERNAL_SERVER_ISSUE":
      return StatusCode.INTERNAL_SERVER_ISSUE;
    case 98005:
    case "INTERNAL_FETCHING_ISSUE":
      return StatusCode.INTERNAL_FETCHING_ISSUE;
    case 98006:
    case "INTERNAL_DATABASE_ISSUE":
      return StatusCode.INTERNAL_DATABASE_ISSUE;
    case 98008:
    case "INTERNAL_CONTEXT_CANCELED":
      return StatusCode.INTERNAL_CONTEXT_CANCELED;
    case 98009:
    case "INTERNAL_UNEXPECTED_TIMEOUT":
      return StatusCode.INTERNAL_UNEXPECTED_TIMEOUT;
    case 98010:
    case "INTERNAL_UNEXPECTED_V1":
      return StatusCode.INTERNAL_UNEXPECTED_V1;
    case 98011:
    case "INTERNAL_UNEXPECTED_PANIC":
      return StatusCode.INTERNAL_UNEXPECTED_PANIC;
    case 98012:
    case "INTERNAL_UNEXPECTED_SPIRE":
      return StatusCode.INTERNAL_UNEXPECTED_SPIRE;
    case 98013:
    case "INTERNAL_REDIS_UNAVAILABLE":
      return StatusCode.INTERNAL_REDIS_UNAVAILABLE;
    case 98014:
    case "INTERNAL_RESOURCE_EXHAUSTED":
      return StatusCode.INTERNAL_RESOURCE_EXHAUSTED;
    case 98015:
    case "INTERNAL_REDIS_UNCATEGORIZED":
      return StatusCode.INTERNAL_REDIS_UNCATEGORIZED;
    case 98016:
    case "INTERNAL_AWS_UNCATEGORIZED":
      return StatusCode.INTERNAL_AWS_UNCATEGORIZED;
    case 98017:
    case "INTERNAL_AZURE_UNCATEGORIZED":
      return StatusCode.INTERNAL_AZURE_UNCATEGORIZED;
    case 98018:
    case "INTERNAL_VECTORDB_UNCATEGORIZED":
      return StatusCode.INTERNAL_VECTORDB_UNCATEGORIZED;
    case 98019:
    case "INTERNAL_ORACLE_UNCATEGORIZED":
      return StatusCode.INTERNAL_ORACLE_UNCATEGORIZED;
    case 98020:
    case "INTERNAL_VULTR_UNCATEGORIZED":
      return StatusCode.INTERNAL_VULTR_UNCATEGORIZED;
    case 98021:
    case "INTERNAL_GCP_UNCATEGORIZED":
      return StatusCode.INTERNAL_GCP_UNCATEGORIZED;
    case 99001:
    case "CONN_UNCATEGORIZED":
      return StatusCode.CONN_UNCATEGORIZED;
    case 99002:
    case "MODEL_UNCATEGORIZED":
      return StatusCode.MODEL_UNCATEGORIZED;
    case 99003:
    case "INPUT_UNCATEGORIZED":
      return StatusCode.INPUT_UNCATEGORIZED;
    case 99004:
    case "ANNOTATION_UNCATEGORIZED":
      return StatusCode.ANNOTATION_UNCATEGORIZED;
    case 99005:
    case "BILLING_UNCATEGORIZED":
      return StatusCode.BILLING_UNCATEGORIZED;
    case 99009:
    case "INTERNAL_UNCATEGORIZED":
      return StatusCode.INTERNAL_UNCATEGORIZED;
    case 90400:
    case "BAD_REQUEST":
      return StatusCode.BAD_REQUEST;
    case 90500:
    case "SERVER_ERROR":
      return StatusCode.SERVER_ERROR;
    case -1:
    case "UNRECOGNIZED":
    default:
      return StatusCode.UNRECOGNIZED;
  }
}

export function statusCodeToJSON(object: StatusCode): string {
  switch (object) {
    case StatusCode.ZERO:
      return "ZERO";
    case StatusCode.SUCCESS:
      return "SUCCESS";
    case StatusCode.MIXED_STATUS:
      return "MIXED_STATUS";
    case StatusCode.FAILURE:
      return "FAILURE";
    case StatusCode.TRY_AGAIN:
      return "TRY_AGAIN";
    case StatusCode.NOT_IMPLEMENTED:
      return "NOT_IMPLEMENTED";
    case StatusCode.MOVED:
      return "MOVED";
    case StatusCode.TEAPOT:
      return "TEAPOT";
    case StatusCode.ACCEPTED:
      return "ACCEPTED";
    case StatusCode.CONN_ACCOUNT_ISSUES:
      return "CONN_ACCOUNT_ISSUES";
    case StatusCode.CONN_TOKEN_INVALID:
      return "CONN_TOKEN_INVALID";
    case StatusCode.CONN_CREDENTIALS_INVALID:
      return "CONN_CREDENTIALS_INVALID";
    case StatusCode.CONN_EXCEED_HOURLY_LIMIT:
      return "CONN_EXCEED_HOURLY_LIMIT";
    case StatusCode.CONN_EXCEED_MONTHLY_LIMIT:
      return "CONN_EXCEED_MONTHLY_LIMIT";
    case StatusCode.CONN_THROTTLED:
      return "CONN_THROTTLED";
    case StatusCode.CONN_EXCEEDS_LIMITS:
      return "CONN_EXCEEDS_LIMITS";
    case StatusCode.CONN_INSUFFICIENT_SCOPES:
      return "CONN_INSUFFICIENT_SCOPES";
    case StatusCode.CONN_KEY_INVALID:
      return "CONN_KEY_INVALID";
    case StatusCode.CONN_KEY_NOT_FOUND:
      return "CONN_KEY_NOT_FOUND";
    case StatusCode.CONN_BAD_REQUEST_FORMAT:
      return "CONN_BAD_REQUEST_FORMAT";
    case StatusCode.CONN_DOES_NOT_EXIST:
      return "CONN_DOES_NOT_EXIST";
    case StatusCode.CONN_INVALID_REQUEST:
      return "CONN_INVALID_REQUEST";
    case StatusCode.CONN_METHOD_NOT_ALLOWED:
      return "CONN_METHOD_NOT_ALLOWED";
    case StatusCode.CONN_NO_GDPR_CONSENT:
      return "CONN_NO_GDPR_CONSENT";
    case StatusCode.CONN_INVALID_RANGE:
      return "CONN_INVALID_RANGE";
    case StatusCode.CONN_AUTH_METHOD_DISABLED:
      return "CONN_AUTH_METHOD_DISABLED";
    case StatusCode.MODEL_TRAINED:
      return "MODEL_TRAINED";
    case StatusCode.MODEL_TRAINING:
      return "MODEL_TRAINING";
    case StatusCode.MODEL_UNTRAINED:
      return "MODEL_UNTRAINED";
    case StatusCode.MODEL_QUEUED_FOR_TRAINING:
      return "MODEL_QUEUED_FOR_TRAINING";
    case StatusCode.MODEL_UPLOADING:
      return "MODEL_UPLOADING";
    case StatusCode.MODEL_UPLOADING_FAILED:
      return "MODEL_UPLOADING_FAILED";
    case StatusCode.MODEL_TRAINING_FAILED:
      return "MODEL_TRAINING_FAILED";
    case StatusCode.MODEL_BUILDING:
      return "MODEL_BUILDING";
    case StatusCode.MODEL_BUILDING_FAILED:
      return "MODEL_BUILDING_FAILED";
    case StatusCode.MODEL_BUILD_UNEXPECTED_ERROR:
      return "MODEL_BUILD_UNEXPECTED_ERROR";
    case StatusCode.MODEL_TRAINING_NO_DATA:
      return "MODEL_TRAINING_NO_DATA";
    case StatusCode.MODEL_TRAINING_NO_POSITIVES:
      return "MODEL_TRAINING_NO_POSITIVES";
    case StatusCode.MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS:
      return "MODEL_TRAINING_ONE_VS_N_SINGLE_CLASS";
    case StatusCode.MODEL_TRAINING_TIMED_OUT:
      return "MODEL_TRAINING_TIMED_OUT";
    case StatusCode.MODEL_TRAINING_WAITING_ERROR:
      return "MODEL_TRAINING_WAITING_ERROR";
    case StatusCode.MODEL_TRAINING_UNKNOWN_ERROR:
      return "MODEL_TRAINING_UNKNOWN_ERROR";
    case StatusCode.MODEL_TRAINING_MSG_REDELIVER:
      return "MODEL_TRAINING_MSG_REDELIVER";
    case StatusCode.MODEL_TRAINING_INSUFFICIENT_DATA:
      return "MODEL_TRAINING_INSUFFICIENT_DATA";
    case StatusCode.MODEL_TRAINING_INVALID_PARAMS:
      return "MODEL_TRAINING_INVALID_PARAMS";
    case StatusCode.MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED:
      return "MODEL_TRAINING_INVALID_DATA_TOLERANCE_EXCEEDED";
    case StatusCode.MODEL_MODIFY_SUCCESS:
      return "MODEL_MODIFY_SUCCESS";
    case StatusCode.MODEL_MODIFY_PENDING:
      return "MODEL_MODIFY_PENDING";
    case StatusCode.MODEL_MODIFY_FAILED:
      return "MODEL_MODIFY_FAILED";
    case StatusCode.MODEL_DOES_NOT_EXIST:
      return "MODEL_DOES_NOT_EXIST";
    case StatusCode.MODEL_PERMISSION_DENIED:
      return "MODEL_PERMISSION_DENIED";
    case StatusCode.MODEL_INVALID_ARGUMENT:
      return "MODEL_INVALID_ARGUMENT";
    case StatusCode.MODEL_INVALID_REQUEST:
      return "MODEL_INVALID_REQUEST";
    case StatusCode.MODEL_EVALUATED:
      return "MODEL_EVALUATED";
    case StatusCode.MODEL_EVALUATING:
      return "MODEL_EVALUATING";
    case StatusCode.MODEL_NOT_EVALUATED:
      return "MODEL_NOT_EVALUATED";
    case StatusCode.MODEL_QUEUED_FOR_EVALUATION:
      return "MODEL_QUEUED_FOR_EVALUATION";
    case StatusCode.MODEL_EVALUATION_TIMED_OUT:
      return "MODEL_EVALUATION_TIMED_OUT";
    case StatusCode.MODEL_EVALUATION_WAITING_ERROR:
      return "MODEL_EVALUATION_WAITING_ERROR";
    case StatusCode.MODEL_EVALUATION_UNKNOWN_ERROR:
      return "MODEL_EVALUATION_UNKNOWN_ERROR";
    case StatusCode.MODEL_PREDICTION_FAILED:
      return "MODEL_PREDICTION_FAILED";
    case StatusCode.MODEL_EVALUATION_MSG_REDELIVER:
      return "MODEL_EVALUATION_MSG_REDELIVER";
    case StatusCode.MODEL_EVALUATION_NEED_LABELS:
      return "MODEL_EVALUATION_NEED_LABELS";
    case StatusCode.MODEL_EVALUATION_NEED_INPUTS:
      return "MODEL_EVALUATION_NEED_INPUTS";
    case StatusCode.MODEL_EVALUATION_FAILED:
      return "MODEL_EVALUATION_FAILED";
    case StatusCode.MODEL_DEPLOYMENT_FAILED:
      return "MODEL_DEPLOYMENT_FAILED";
    case StatusCode.MODEL_DEPLOYING:
      return "MODEL_DEPLOYING";
    case StatusCode.MODEL_QUEUED_FOR_DEPLOYMENT:
      return "MODEL_QUEUED_FOR_DEPLOYMENT";
    case StatusCode.MODEL_NOT_DEPLOYED:
      return "MODEL_NOT_DEPLOYED";
    case StatusCode.MODEL_BUSY_PLEASE_RETRY:
      return "MODEL_BUSY_PLEASE_RETRY";
    case StatusCode.MODEL_LOADING:
      return "MODEL_LOADING";
    case StatusCode.MODEL_REFERENCE_INVALID_ARGUMENT:
      return "MODEL_REFERENCE_INVALID_ARGUMENT";
    case StatusCode.MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT:
      return "MODEL_EXAMPLE_INPUT_INVALID_ARGUMENT";
    case StatusCode.MODEL_EXPORTED:
      return "MODEL_EXPORTED";
    case StatusCode.MODEL_EXPORTING:
      return "MODEL_EXPORTING";
    case StatusCode.MODEL_EXPORTING_FAILED:
      return "MODEL_EXPORTING_FAILED";
    case StatusCode.MODEL_EXPORT_PENDING:
      return "MODEL_EXPORT_PENDING";
    case StatusCode.WORKFLOW_NO_MATCHING_INPUT:
      return "WORKFLOW_NO_MATCHING_INPUT";
    case StatusCode.WORKFLOW_REQUIRE_TRAINED_MODEL:
      return "WORKFLOW_REQUIRE_TRAINED_MODEL";
    case StatusCode.WORKFLOW_DUPLICATE:
      return "WORKFLOW_DUPLICATE";
    case StatusCode.WORKFLOW_UNSUPPORTED_FORMAT:
      return "WORKFLOW_UNSUPPORTED_FORMAT";
    case StatusCode.WORKFLOW_DOES_NOT_EXIST:
      return "WORKFLOW_DOES_NOT_EXIST";
    case StatusCode.WORKFLOW_PERMISSION_DENIED:
      return "WORKFLOW_PERMISSION_DENIED";
    case StatusCode.WORKFLOW_INVALID_ARGUMENT:
      return "WORKFLOW_INVALID_ARGUMENT";
    case StatusCode.WORKFLOW_INVALID_RECIPE:
      return "WORKFLOW_INVALID_RECIPE";
    case StatusCode.WORKFLOW_INVALID_TEMPLATE:
      return "WORKFLOW_INVALID_TEMPLATE";
    case StatusCode.WORKFLOW_INVALID_GRAPH:
      return "WORKFLOW_INVALID_GRAPH";
    case StatusCode.WORKFLOW_INTERNAL_FAILURE:
      return "WORKFLOW_INTERNAL_FAILURE";
    case StatusCode.WORKFLOW_INVALID_REQUEST:
      return "WORKFLOW_INVALID_REQUEST";
    case StatusCode.WORKFLOW_MODIFY_SUCCESS:
      return "WORKFLOW_MODIFY_SUCCESS";
    case StatusCode.WORKFLOW_MODIFY_PENDING:
      return "WORKFLOW_MODIFY_PENDING";
    case StatusCode.WORKFLOW_MODIFY_FAILED:
      return "WORKFLOW_MODIFY_FAILED";
    case StatusCode.WORKFLOW_REINDEX_FAILED:
      return "WORKFLOW_REINDEX_FAILED";
    case StatusCode.CONCEPT_MODIFY_SUCCESS:
      return "CONCEPT_MODIFY_SUCCESS";
    case StatusCode.CONCEPT_MODIFY_PENDING:
      return "CONCEPT_MODIFY_PENDING";
    case StatusCode.CONCEPT_MODIFY_FAILED:
      return "CONCEPT_MODIFY_FAILED";
    case StatusCode.ANNOTATION_SUCCESS:
      return "ANNOTATION_SUCCESS";
    case StatusCode.ANNOTATION_PENDING:
      return "ANNOTATION_PENDING";
    case StatusCode.ANNOTATION_FAILED:
      return "ANNOTATION_FAILED";
    case StatusCode.ANNOTATION_UNKNOWN_STATUS:
      return "ANNOTATION_UNKNOWN_STATUS";
    case StatusCode.ANNOTATION_INVALID_ARGUMENT:
      return "ANNOTATION_INVALID_ARGUMENT";
    case StatusCode.ANNOTATION_PERMISSION_DENIED:
      return "ANNOTATION_PERMISSION_DENIED";
    case StatusCode.ANNOTATION_AWAITING_REVIEW:
      return "ANNOTATION_AWAITING_REVIEW";
    case StatusCode.ANNOTATION_AWAITING_CONSENSUS_REVIEW:
      return "ANNOTATION_AWAITING_CONSENSUS_REVIEW";
    case StatusCode.ANNOTATION_REVIEW_DENIED:
      return "ANNOTATION_REVIEW_DENIED";
    case StatusCode.ANNOTATION_MODIFY_SUCCESS:
      return "ANNOTATION_MODIFY_SUCCESS";
    case StatusCode.ANNOTATION_MODIFY_PENDING:
      return "ANNOTATION_MODIFY_PENDING";
    case StatusCode.ANNOTATION_MODIFY_FAILED:
      return "ANNOTATION_MODIFY_FAILED";
    case StatusCode.ANNOTATION_TRACK_IDLE:
      return "ANNOTATION_TRACK_IDLE";
    case StatusCode.ANNOTATION_TRACK_IN_PROGRESS:
      return "ANNOTATION_TRACK_IN_PROGRESS";
    case StatusCode.ANNOTATION_TRACK_PENDING:
      return "ANNOTATION_TRACK_PENDING";
    case StatusCode.ANNOTATION_TRACK_APPROVED:
      return "ANNOTATION_TRACK_APPROVED";
    case StatusCode.ANNOTATION_TRACK_FAILED:
      return "ANNOTATION_TRACK_FAILED";
    case StatusCode.METADATA_INVALID_PATCH_ARGUMENTS:
      return "METADATA_INVALID_PATCH_ARGUMENTS";
    case StatusCode.METADATA_PARSING_ISSUE:
      return "METADATA_PARSING_ISSUE";
    case StatusCode.METADATA_MANIPULATION_ISSUE:
      return "METADATA_MANIPULATION_ISSUE";
    case StatusCode.TRAINER_JOB_STATE_NONE:
      return "TRAINER_JOB_STATE_NONE";
    case StatusCode.TRAINER_JOB_STATE_QUEUED:
      return "TRAINER_JOB_STATE_QUEUED";
    case StatusCode.TRAINER_JOB_STATE_RUNNING:
      return "TRAINER_JOB_STATE_RUNNING";
    case StatusCode.TRAINER_JOB_STATE_COMPLETE:
      return "TRAINER_JOB_STATE_COMPLETE";
    case StatusCode.TRAINER_JOB_STATE_ERROR:
      return "TRAINER_JOB_STATE_ERROR";
    case StatusCode.DATA_DUMP_SUCCESS:
      return "DATA_DUMP_SUCCESS";
    case StatusCode.DATA_DUMP_PENDING:
      return "DATA_DUMP_PENDING";
    case StatusCode.DATA_DUMP_FAILED:
      return "DATA_DUMP_FAILED";
    case StatusCode.DATA_DUMP_IN_PROGRESS:
      return "DATA_DUMP_IN_PROGRESS";
    case StatusCode.DATA_DUMP_NO_DATA:
      return "DATA_DUMP_NO_DATA";
    case StatusCode.DATA_DUMP_UNEXPECTED_ERROR:
      return "DATA_DUMP_UNEXPECTED_ERROR";
    case StatusCode.DATA_DUMP_EXPORT_SUCCESS:
      return "DATA_DUMP_EXPORT_SUCCESS";
    case StatusCode.DATA_DUMP_EXPORT_PENDING:
      return "DATA_DUMP_EXPORT_PENDING";
    case StatusCode.DATA_DUMP_EXPORT_FAILED:
      return "DATA_DUMP_EXPORT_FAILED";
    case StatusCode.DATA_DUMP_EXPORT_IN_PROGRESS:
      return "DATA_DUMP_EXPORT_IN_PROGRESS";
    case StatusCode.DATA_DUMP_EXPORT_UNEXPECTED_ERROR:
      return "DATA_DUMP_EXPORT_UNEXPECTED_ERROR";
    case StatusCode.APP_DUPLICATION_SUCCESS:
      return "APP_DUPLICATION_SUCCESS";
    case StatusCode.APP_DUPLICATION_FAILED:
      return "APP_DUPLICATION_FAILED";
    case StatusCode.APP_DUPLICATION_PENDING:
      return "APP_DUPLICATION_PENDING";
    case StatusCode.APP_DUPLICATION_IN_PROGRESS:
      return "APP_DUPLICATION_IN_PROGRESS";
    case StatusCode.APP_DUPLICATION_INVALID_REQUEST:
      return "APP_DUPLICATION_INVALID_REQUEST";
    case StatusCode.MODULE_DOES_NOT_EXIST:
      return "MODULE_DOES_NOT_EXIST";
    case StatusCode.MODULE_PERMISSION_DENIED:
      return "MODULE_PERMISSION_DENIED";
    case StatusCode.MODULE_INVALID_ARGUMENT:
      return "MODULE_INVALID_ARGUMENT";
    case StatusCode.MODULE_INVALID_REQUEST:
      return "MODULE_INVALID_REQUEST";
    case StatusCode.BULK_OPERATION_SUCCESS:
      return "BULK_OPERATION_SUCCESS";
    case StatusCode.BULK_OPERATION_FAILED:
      return "BULK_OPERATION_FAILED";
    case StatusCode.BULK_OPERATION_PENDING:
      return "BULK_OPERATION_PENDING";
    case StatusCode.BULK_OPERATION_IN_PROGRESS:
      return "BULK_OPERATION_IN_PROGRESS";
    case StatusCode.BULK_OPERATION_INVALID_REQUEST:
      return "BULK_OPERATION_INVALID_REQUEST";
    case StatusCode.BULK_OPERATION_CANCELLED:
      return "BULK_OPERATION_CANCELLED";
    case StatusCode.BULK_OPERATION_UNEXPECTED_ERROR:
      return "BULK_OPERATION_UNEXPECTED_ERROR";
    case StatusCode.RUNNER_DOES_NOT_EXIST:
      return "RUNNER_DOES_NOT_EXIST";
    case StatusCode.RUNNER_PERMISSION_DENIED:
      return "RUNNER_PERMISSION_DENIED";
    case StatusCode.RUNNER_INVALID_ARGUMENT:
      return "RUNNER_INVALID_ARGUMENT";
    case StatusCode.RUNNER_INVALID_REQUEST:
      return "RUNNER_INVALID_REQUEST";
    case StatusCode.RUNNER_NEEDS_RETRY:
      return "RUNNER_NEEDS_RETRY";
    case StatusCode.RUNNER_STREAM_START:
      return "RUNNER_STREAM_START";
    case StatusCode.RUNNER_STREAM_END:
      return "RUNNER_STREAM_END";
    case StatusCode.RUNNER_ITEM_CANCELLED:
      return "RUNNER_ITEM_CANCELLED";
    case StatusCode.RUNNER_PROCESSING_FAILED:
      return "RUNNER_PROCESSING_FAILED";
    case StatusCode.NODEPOOL_DOES_NOT_EXIST:
      return "NODEPOOL_DOES_NOT_EXIST";
    case StatusCode.NODEPOOL_INVALID_ARGUMENT:
      return "NODEPOOL_INVALID_ARGUMENT";
    case StatusCode.NODEPOOL_INVALID_REQUEST:
      return "NODEPOOL_INVALID_REQUEST";
    case StatusCode.COMPUTE_CLUSTER_DOES_NOT_EXIST:
      return "COMPUTE_CLUSTER_DOES_NOT_EXIST";
    case StatusCode.COMPUTE_CLUSTER_INVALID_ARGUMENT:
      return "COMPUTE_CLUSTER_INVALID_ARGUMENT";
    case StatusCode.COMPUTE_CLUSTER_INVALID_REQUEST:
      return "COMPUTE_CLUSTER_INVALID_REQUEST";
    case StatusCode.DEPLOYMENT_DOES_NOT_EXIST:
      return "DEPLOYMENT_DOES_NOT_EXIST";
    case StatusCode.DEPLOYMENT_INVALID_ARGUMENT:
      return "DEPLOYMENT_INVALID_ARGUMENT";
    case StatusCode.DEPLOYMENT_INVALID_REQUEST:
      return "DEPLOYMENT_INVALID_REQUEST";
    case StatusCode.INSTANCE_TYPE_DOES_NOT_EXIST:
      return "INSTANCE_TYPE_DOES_NOT_EXIST";
    case StatusCode.INSTANCE_TYPE_INVALID_ARGUMENT:
      return "INSTANCE_TYPE_INVALID_ARGUMENT";
    case StatusCode.INSTANCE_TYPE_INVALID_REQUEST:
      return "INSTANCE_TYPE_INVALID_REQUEST";
    case StatusCode.COMPUTE_PLANE_METRICS_INVALID_REQUEST:
      return "COMPUTE_PLANE_METRICS_INVALID_REQUEST";
    case StatusCode.PIPELINE_STEP_DOES_NOT_EXIST:
      return "PIPELINE_STEP_DOES_NOT_EXIST";
    case StatusCode.PIPELINE_STEP_INVALID_ARGUMENT:
      return "PIPELINE_STEP_INVALID_ARGUMENT";
    case StatusCode.PIPELINE_STEP_INVALID_REQUEST:
      return "PIPELINE_STEP_INVALID_REQUEST";
    case StatusCode.PIPELINE_STEP_UPLOADING:
      return "PIPELINE_STEP_UPLOADING";
    case StatusCode.PIPELINE_STEP_UPLOADING_FAILED:
      return "PIPELINE_STEP_UPLOADING_FAILED";
    case StatusCode.PIPELINE_STEP_BUILDING:
      return "PIPELINE_STEP_BUILDING";
    case StatusCode.PIPELINE_STEP_BUILDING_FAILED:
      return "PIPELINE_STEP_BUILDING_FAILED";
    case StatusCode.PIPELINE_STEP_BUILD_UNEXPECTED_ERROR:
      return "PIPELINE_STEP_BUILD_UNEXPECTED_ERROR";
    case StatusCode.PIPELINE_STEP_READY:
      return "PIPELINE_STEP_READY";
    case StatusCode.PIPELINE_STEP_NOT_READY:
      return "PIPELINE_STEP_NOT_READY";
    case StatusCode.PIPELINE_DOES_NOT_EXIST:
      return "PIPELINE_DOES_NOT_EXIST";
    case StatusCode.PIPELINE_INVALID_ARGUMENT:
      return "PIPELINE_INVALID_ARGUMENT";
    case StatusCode.PIPELINE_INVALID_REQUEST:
      return "PIPELINE_INVALID_REQUEST";
    case StatusCode.INPUT_SUCCESS:
      return "INPUT_SUCCESS";
    case StatusCode.INPUT_PENDING:
      return "INPUT_PENDING";
    case StatusCode.INPUT_FAILED:
      return "INPUT_FAILED";
    case StatusCode.INPUT_IN_PROGRESS:
      return "INPUT_IN_PROGRESS";
    case StatusCode.INPUT_DOWNLOAD_SUCCESS:
      return "INPUT_DOWNLOAD_SUCCESS";
    case StatusCode.INPUT_DOWNLOAD_PENDING:
      return "INPUT_DOWNLOAD_PENDING";
    case StatusCode.INPUT_DOWNLOAD_FAILED:
      return "INPUT_DOWNLOAD_FAILED";
    case StatusCode.INPUT_DOWNLOAD_IN_PROGRESS:
      return "INPUT_DOWNLOAD_IN_PROGRESS";
    case StatusCode.INPUT_STATUS_UPDATE_FAILED:
      return "INPUT_STATUS_UPDATE_FAILED";
    case StatusCode.INPUT_DELETE_FAILED:
      return "INPUT_DELETE_FAILED";
    case StatusCode.INPUT_DUPLICATE:
      return "INPUT_DUPLICATE";
    case StatusCode.INPUT_UNSUPPORTED_FORMAT:
      return "INPUT_UNSUPPORTED_FORMAT";
    case StatusCode.INPUT_DOES_NOT_EXIST:
      return "INPUT_DOES_NOT_EXIST";
    case StatusCode.INPUT_PERMISSION_DENIED:
      return "INPUT_PERMISSION_DENIED";
    case StatusCode.INPUT_INVALID_ARGUMENT:
      return "INPUT_INVALID_ARGUMENT";
    case StatusCode.INPUT_OVER_LIMIT:
      return "INPUT_OVER_LIMIT";
    case StatusCode.INPUT_INVALID_URL:
      return "INPUT_INVALID_URL";
    case StatusCode.INPUT_MODIFY_SUCCESS:
      return "INPUT_MODIFY_SUCCESS";
    case StatusCode.INPUT_MODIFY_PENDING:
      return "INPUT_MODIFY_PENDING";
    case StatusCode.INPUT_MODIFY_FAILED:
      return "INPUT_MODIFY_FAILED";
    case StatusCode.INPUT_STORAGE_HOST_FAILED:
      return "INPUT_STORAGE_HOST_FAILED";
    case StatusCode.ALL_INPUT_INVALID_BYTES:
      return "ALL_INPUT_INVALID_BYTES";
    case StatusCode.INPUT_CLUSTER_SUCCESS:
      return "INPUT_CLUSTER_SUCCESS";
    case StatusCode.INPUT_CLUSTER_PENDING:
      return "INPUT_CLUSTER_PENDING";
    case StatusCode.INPUT_CLUSTER_FAILED:
      return "INPUT_CLUSTER_FAILED";
    case StatusCode.INPUT_CLUSTER_IN_PROGRESS:
      return "INPUT_CLUSTER_IN_PROGRESS";
    case StatusCode.INPUT_REINDEX_SUCCESS:
      return "INPUT_REINDEX_SUCCESS";
    case StatusCode.INPUT_REINDEX_PENDING:
      return "INPUT_REINDEX_PENDING";
    case StatusCode.INPUT_REINDEX_FAILED:
      return "INPUT_REINDEX_FAILED";
    case StatusCode.INPUT_REINDEX_IN_PROGRESS:
      return "INPUT_REINDEX_IN_PROGRESS";
    case StatusCode.INPUT_VIDEO_DOWNLOAD_SUCCESS:
      return "INPUT_VIDEO_DOWNLOAD_SUCCESS";
    case StatusCode.INPUT_VIDEO_DOWNLOAD_PENDING:
      return "INPUT_VIDEO_DOWNLOAD_PENDING";
    case StatusCode.INPUT_VIDEO_DOWNLOAD_FAILED:
      return "INPUT_VIDEO_DOWNLOAD_FAILED";
    case StatusCode.INPUT_VIDEO_DUPLICATE:
      return "INPUT_VIDEO_DUPLICATE";
    case StatusCode.INPUT_VIDEO_UNSUPPORTED_FORMAT:
      return "INPUT_VIDEO_UNSUPPORTED_FORMAT";
    case StatusCode.INPUT_VIDEO_DOES_NOT_EXIST:
      return "INPUT_VIDEO_DOES_NOT_EXIST";
    case StatusCode.INPUT_VIDEO_PERMISSION_DENIED:
      return "INPUT_VIDEO_PERMISSION_DENIED";
    case StatusCode.INPUT_VIDEO_INVALID_ARGUMENT:
      return "INPUT_VIDEO_INVALID_ARGUMENT";
    case StatusCode.INPUT_VIDEO_OVER_LIMIT:
      return "INPUT_VIDEO_OVER_LIMIT";
    case StatusCode.INPUT_VIDEO_INVALID_URL:
      return "INPUT_VIDEO_INVALID_URL";
    case StatusCode.INPUT_VIDEO_MODIFY_SUCCESS:
      return "INPUT_VIDEO_MODIFY_SUCCESS";
    case StatusCode.INPUT_VIDEO_MODIFY_PENDING:
      return "INPUT_VIDEO_MODIFY_PENDING";
    case StatusCode.INPUT_VIDEO_MODIFY_FAILED:
      return "INPUT_VIDEO_MODIFY_FAILED";
    case StatusCode.INPUT_VIDEO_STORAGE_HOST_FAILED:
      return "INPUT_VIDEO_STORAGE_HOST_FAILED";
    case StatusCode.ALL_INPUT_VIDEOS_INVALID_BYTES:
      return "ALL_INPUT_VIDEOS_INVALID_BYTES";
    case StatusCode.INPUT_VIDEO_PROCESSING_SUCCESS:
      return "INPUT_VIDEO_PROCESSING_SUCCESS";
    case StatusCode.INPUT_VIDEO_PROCESSING_PENDING:
      return "INPUT_VIDEO_PROCESSING_PENDING";
    case StatusCode.INPUT_VIDEO_PROCESSING_FAILED:
      return "INPUT_VIDEO_PROCESSING_FAILED";
    case StatusCode.INPUT_VIDEO_STORAGE_INCONSISTENCY:
      return "INPUT_VIDEO_STORAGE_INCONSISTENCY";
    case StatusCode.INPUT_VIDEO_STORAGE_FAILURE:
      return "INPUT_VIDEO_STORAGE_FAILURE";
    case StatusCode.INPUT_VIDEO_URL_GENERATION_FAILURE:
      return "INPUT_VIDEO_URL_GENERATION_FAILURE";
    case StatusCode.INPUT_CONNECTION_FAILED:
      return "INPUT_CONNECTION_FAILED";
    case StatusCode.REQUEST_DISABLED_FOR_MAINTENANCE:
      return "REQUEST_DISABLED_FOR_MAINTENANCE";
    case StatusCode.INPUT_WRITES_DISABLED_FOR_MAINTENANCE:
      return "INPUT_WRITES_DISABLED_FOR_MAINTENANCE";
    case StatusCode.INPUT_INVALID_REQUEST:
      return "INPUT_INVALID_REQUEST";
    case StatusCode.PREDICT_INVALID_REQUEST:
      return "PREDICT_INVALID_REQUEST";
    case StatusCode.SEARCH_INVALID_REQUEST:
      return "SEARCH_INVALID_REQUEST";
    case StatusCode.CONCEPTS_INVALID_REQUEST:
      return "CONCEPTS_INVALID_REQUEST";
    case StatusCode.STATS_INVALID_REQUEST:
      return "STATS_INVALID_REQUEST";
    case StatusCode.DATABASE_DUPLICATE_KEY:
      return "DATABASE_DUPLICATE_KEY";
    case StatusCode.DATABASE_STATEMENT_TIMEOUT:
      return "DATABASE_STATEMENT_TIMEOUT";
    case StatusCode.DATABASE_INVALID_ROWS_AFFECTED:
      return "DATABASE_INVALID_ROWS_AFFECTED";
    case StatusCode.DATABASE_DEADLOCK_DETECTED:
      return "DATABASE_DEADLOCK_DETECTED";
    case StatusCode.DATABASE_FAIL_TASK:
      return "DATABASE_FAIL_TASK";
    case StatusCode.DATABASE_FAIL_TO_GET_CONNECTIONS:
      return "DATABASE_FAIL_TO_GET_CONNECTIONS";
    case StatusCode.DATABASE_TOO_MANY_CLIENTS:
      return "DATABASE_TOO_MANY_CLIENTS";
    case StatusCode.DATABASE_CONSTRAINT_VIOLATED:
      return "DATABASE_CONSTRAINT_VIOLATED";
    case StatusCode.DATABASE_CANCELED:
      return "DATABASE_CANCELED";
    case StatusCode.ASYNC_WORKER_MULTI_ERRORS:
      return "ASYNC_WORKER_MULTI_ERRORS";
    case StatusCode.RPC_REQUEST_QUEUE_FULL:
      return "RPC_REQUEST_QUEUE_FULL";
    case StatusCode.RPC_SERVER_UNAVAILABLE:
      return "RPC_SERVER_UNAVAILABLE";
    case StatusCode.RPC_REQUEST_TIMEOUT:
      return "RPC_REQUEST_TIMEOUT";
    case StatusCode.RPC_MAX_MESSAGE_SIZE_EXCEEDED:
      return "RPC_MAX_MESSAGE_SIZE_EXCEEDED";
    case StatusCode.RPC_CANCELED:
      return "RPC_CANCELED";
    case StatusCode.RPC_UNKNOWN_METHOD:
      return "RPC_UNKNOWN_METHOD";
    case StatusCode.REQUEST_CANCELED_BY_USER:
      return "REQUEST_CANCELED_BY_USER";
    case StatusCode.CLUSTER_INTERNAL_FAILURE:
      return "CLUSTER_INTERNAL_FAILURE";
    case StatusCode.EXTERNAL_CONNECTION_ERROR:
      return "EXTERNAL_CONNECTION_ERROR";
    case StatusCode.QUERY_INVALID_SYNTAX:
      return "QUERY_INVALID_SYNTAX";
    case StatusCode.QUEUE_CONN_ERROR:
      return "QUEUE_CONN_ERROR";
    case StatusCode.QUEUE_CLOSE_REQUEST_TIMEOUT:
      return "QUEUE_CLOSE_REQUEST_TIMEOUT";
    case StatusCode.QUEUE_CONN_CLOSED:
      return "QUEUE_CONN_CLOSED";
    case StatusCode.QUEUE_PUBLISH_ACK_TIMEOUT:
      return "QUEUE_PUBLISH_ACK_TIMEOUT";
    case StatusCode.QUEUE_PUBLISH_ERROR:
      return "QUEUE_PUBLISH_ERROR";
    case StatusCode.QUEUE_SUBSCRIPTION_TIMEOUT:
      return "QUEUE_SUBSCRIPTION_TIMEOUT";
    case StatusCode.QUEUE_SUBSCRIPTION_ERROR:
      return "QUEUE_SUBSCRIPTION_ERROR";
    case StatusCode.QUEUE_MARSHALLING_FAILED:
      return "QUEUE_MARSHALLING_FAILED";
    case StatusCode.QUEUE_UNMARSHALLING_FAILED:
      return "QUEUE_UNMARSHALLING_FAILED";
    case StatusCode.QUEUE_MAX_MSG_REDELIVERY_EXCEEDED:
      return "QUEUE_MAX_MSG_REDELIVERY_EXCEEDED";
    case StatusCode.QUEUE_ACK_FAILURE:
      return "QUEUE_ACK_FAILURE";
    case StatusCode.SQS_OVERLIMIT:
      return "SQS_OVERLIMIT";
    case StatusCode.SQS_INVALID_RECEIPT_HANDLE:
      return "SQS_INVALID_RECEIPT_HANDLE";
    case StatusCode.SQS_UNKNOWN:
      return "SQS_UNKNOWN";
    case StatusCode.SEARCH_INTERNAL_FAILURE:
      return "SEARCH_INTERNAL_FAILURE";
    case StatusCode.SEARCH_PROJECTION_FAILURE:
      return "SEARCH_PROJECTION_FAILURE";
    case StatusCode.SEARCH_PREDICTION_FAILURE:
      return "SEARCH_PREDICTION_FAILURE";
    case StatusCode.SEARCH_BY_NOT_FULLY_INDEXED_INPUT:
      return "SEARCH_BY_NOT_FULLY_INDEXED_INPUT";
    case StatusCode.SAVED_SEARCH_MODIFY_FAILED:
      return "SAVED_SEARCH_MODIFY_FAILED";
    case StatusCode.SEARCH_COUNTS_UNAVAILABLE:
      return "SEARCH_COUNTS_UNAVAILABLE";
    case StatusCode.EVALUATION_QUEUED:
      return "EVALUATION_QUEUED";
    case StatusCode.EVALUATION_IN_PROGRESS:
      return "EVALUATION_IN_PROGRESS";
    case StatusCode.EVALUATION_SUCCESS:
      return "EVALUATION_SUCCESS";
    case StatusCode.EVALUATION_FAILED_TO_RETRIEVE_DATA:
      return "EVALUATION_FAILED_TO_RETRIEVE_DATA";
    case StatusCode.EVALUATION_INVALID_ARGUMENT:
      return "EVALUATION_INVALID_ARGUMENT";
    case StatusCode.EVALUATION_FAILED:
      return "EVALUATION_FAILED";
    case StatusCode.EVALUATION_PENDING:
      return "EVALUATION_PENDING";
    case StatusCode.EVALUATION_TIMED_OUT:
      return "EVALUATION_TIMED_OUT";
    case StatusCode.EVALUATION_UNEXPECTED_ERROR:
      return "EVALUATION_UNEXPECTED_ERROR";
    case StatusCode.EVALUATION_MIXED:
      return "EVALUATION_MIXED";
    case StatusCode.STRIPE_EVENT_ERROR:
      return "STRIPE_EVENT_ERROR";
    case StatusCode.STRIPE_UNEXPECTED_ERROR:
      return "STRIPE_UNEXPECTED_ERROR";
    case StatusCode.CACHE_MISS:
      return "CACHE_MISS";
    case StatusCode.REDIS_SCRIPT_EXITED_WITH_FAILURE:
      return "REDIS_SCRIPT_EXITED_WITH_FAILURE";
    case StatusCode.REDIS_STREAM_ERR:
      return "REDIS_STREAM_ERR";
    case StatusCode.REDIS_NO_CONSUMERS:
      return "REDIS_NO_CONSUMERS";
    case StatusCode.REDIS_STREAM_BACKOFF:
      return "REDIS_STREAM_BACKOFF";
    case StatusCode.SIGNUP_EVENT_ERROR:
      return "SIGNUP_EVENT_ERROR";
    case StatusCode.SIGNUP_FLAGGED:
      return "SIGNUP_FLAGGED";
    case StatusCode.FILETYPE_UNSUPPORTED:
      return "FILETYPE_UNSUPPORTED";
    case StatusCode.LOGIN_EVENT_ERROR:
      return "LOGIN_EVENT_ERROR";
    case StatusCode.SIFT_UNCATEGORIZED_ERROR:
      return "SIFT_UNCATEGORIZED_ERROR";
    case StatusCode.APP_COUNT_INVALID_MESSAGE:
      return "APP_COUNT_INVALID_MESSAGE";
    case StatusCode.APP_COUNT_UPDATE_INCREMENT_FAILED:
      return "APP_COUNT_UPDATE_INCREMENT_FAILED";
    case StatusCode.APP_COUNT_REBUILD_FAILED:
      return "APP_COUNT_REBUILD_FAILED";
    case StatusCode.APP_COUNT_INTERNAL_FAILURE:
      return "APP_COUNT_INTERNAL_FAILURE";
    case StatusCode.MP_DOWNLOAD_ERROR:
      return "MP_DOWNLOAD_ERROR";
    case StatusCode.MP_RESOLVE_DNS_ERROR:
      return "MP_RESOLVE_DNS_ERROR";
    case StatusCode.MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR:
      return "MP_DOWNLOAD_MAX_SIZE_EXCEEDED_ERROR";
    case StatusCode.MP_IMAGE_DECODE_ERROR:
      return "MP_IMAGE_DECODE_ERROR";
    case StatusCode.MP_INVALID_ARGUMENT:
      return "MP_INVALID_ARGUMENT";
    case StatusCode.MP_IMAGE_PROCESSING_ERROR:
      return "MP_IMAGE_PROCESSING_ERROR";
    case StatusCode.DATATIER_CONN_ERROR:
      return "DATATIER_CONN_ERROR";
    case StatusCode.USER_CONSENT_FACE:
      return "USER_CONSENT_FACE";
    case StatusCode.WORKER_MISSING:
      return "WORKER_MISSING";
    case StatusCode.WORKER_ACTIVE:
      return "WORKER_ACTIVE";
    case StatusCode.WORKER_INACTIVE:
      return "WORKER_INACTIVE";
    case StatusCode.COLLECTOR_MISSING:
      return "COLLECTOR_MISSING";
    case StatusCode.COLLECTOR_ACTIVE:
      return "COLLECTOR_ACTIVE";
    case StatusCode.COLLECTOR_INACTIVE:
      return "COLLECTOR_INACTIVE";
    case StatusCode.COLLECTOR_POST_INPUT_FAILED:
      return "COLLECTOR_POST_INPUT_FAILED";
    case StatusCode.SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST:
      return "SSO_IDENTITY_PROVIDER_DOES_NOT_EXIST";
    case StatusCode.TASK_IN_PROGRESS:
      return "TASK_IN_PROGRESS";
    case StatusCode.TASK_DONE:
      return "TASK_DONE";
    case StatusCode.TASK_WONT_DO:
      return "TASK_WONT_DO";
    case StatusCode.TASK_FAILED:
      return "TASK_FAILED";
    case StatusCode.TASK_IDLE:
      return "TASK_IDLE";
    case StatusCode.TASK_CONFLICT:
      return "TASK_CONFLICT";
    case StatusCode.TASK_NOT_IMPLEMENTED:
      return "TASK_NOT_IMPLEMENTED";
    case StatusCode.TASK_MISSING:
      return "TASK_MISSING";
    case StatusCode.TASK_PERMISSION_DENIED:
      return "TASK_PERMISSION_DENIED";
    case StatusCode.TASK_ASSIGNMENT_SUCCESS:
      return "TASK_ASSIGNMENT_SUCCESS";
    case StatusCode.TASK_ASSIGNMENT_PENDING:
      return "TASK_ASSIGNMENT_PENDING";
    case StatusCode.TASK_ASSIGNMENT_AWAITING_REVIEW:
      return "TASK_ASSIGNMENT_AWAITING_REVIEW";
    case StatusCode.TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW:
      return "TASK_ASSIGNMENT_AWAITING_CONSENSUS_REVIEW";
    case StatusCode.TASK_ASSIGNMENT_REJECTED:
      return "TASK_ASSIGNMENT_REJECTED";
    case StatusCode.TASK_ASSIGNMENT_REVIEW_SUCCESS:
      return "TASK_ASSIGNMENT_REVIEW_SUCCESS";
    case StatusCode.TASK_ASSIGNMENT_REVIEW_PENDING:
      return "TASK_ASSIGNMENT_REVIEW_PENDING";
    case StatusCode.TASK_ASSIGNMENT_REVIEW_DISMISSED:
      return "TASK_ASSIGNMENT_REVIEW_DISMISSED";
    case StatusCode.LABEL_ORDER_PENDING:
      return "LABEL_ORDER_PENDING";
    case StatusCode.LABEL_ORDER_IN_PROGRESS:
      return "LABEL_ORDER_IN_PROGRESS";
    case StatusCode.LABEL_ORDER_SUCCESS:
      return "LABEL_ORDER_SUCCESS";
    case StatusCode.LABEL_ORDER_CANCELED:
      return "LABEL_ORDER_CANCELED";
    case StatusCode.LICENSE_ACTIVE:
      return "LICENSE_ACTIVE";
    case StatusCode.LICENSE_DOES_NOT_EXIST:
      return "LICENSE_DOES_NOT_EXIST";
    case StatusCode.LICENSE_NEED_UPDATE:
      return "LICENSE_NEED_UPDATE";
    case StatusCode.LICENSE_EXPIRED:
      return "LICENSE_EXPIRED";
    case StatusCode.LICENSE_REVOKED:
      return "LICENSE_REVOKED";
    case StatusCode.LICENSE_DELETED:
      return "LICENSE_DELETED";
    case StatusCode.LICENSE_VOLUME_EXCEEDED:
      return "LICENSE_VOLUME_EXCEEDED";
    case StatusCode.PASSWORD_VALIDATION_SUCCESS:
      return "PASSWORD_VALIDATION_SUCCESS";
    case StatusCode.PASSWORD_VALIDATION_FAILED:
      return "PASSWORD_VALIDATION_FAILED";
    case StatusCode.PASSWORDPOLICY_INVALID_ARGUMENT:
      return "PASSWORDPOLICY_INVALID_ARGUMENT";
    case StatusCode.FEATUREFLAG_CONFIG_NOT_FOUND:
      return "FEATUREFLAG_CONFIG_NOT_FOUND";
    case StatusCode.FEATUREFLAG_INVALID_ARGUMENT:
      return "FEATUREFLAG_INVALID_ARGUMENT";
    case StatusCode.FEATUREFLAG_BLOCKED:
      return "FEATUREFLAG_BLOCKED";
    case StatusCode.FEATUREFLAG_NOT_FOUND:
      return "FEATUREFLAG_NOT_FOUND";
    case StatusCode.MAINTENANCE_SUCCESS:
      return "MAINTENANCE_SUCCESS";
    case StatusCode.MAINTENANCE_FAILED:
      return "MAINTENANCE_FAILED";
    case StatusCode.DATASET_VERSION_PENDING:
      return "DATASET_VERSION_PENDING";
    case StatusCode.DATASET_VERSION_IN_PROGRESS:
      return "DATASET_VERSION_IN_PROGRESS";
    case StatusCode.DATASET_VERSION_READY:
      return "DATASET_VERSION_READY";
    case StatusCode.DATASET_VERSION_FAILURE:
      return "DATASET_VERSION_FAILURE";
    case StatusCode.DATASET_VERSION_UNEXPECTED_ERROR:
      return "DATASET_VERSION_UNEXPECTED_ERROR";
    case StatusCode.DATASET_VERSION_CONFLICT:
      return "DATASET_VERSION_CONFLICT";
    case StatusCode.DATASET_INPUT_SUCCESS:
      return "DATASET_INPUT_SUCCESS";
    case StatusCode.DATASET_INPUT_DUPLICATE:
      return "DATASET_INPUT_DUPLICATE";
    case StatusCode.DATASET_VERSION_EXPORT_SUCCESS:
      return "DATASET_VERSION_EXPORT_SUCCESS";
    case StatusCode.DATASET_VERSION_EXPORT_PENDING:
      return "DATASET_VERSION_EXPORT_PENDING";
    case StatusCode.DATASET_VERSION_EXPORT_FAILED:
      return "DATASET_VERSION_EXPORT_FAILED";
    case StatusCode.DATASET_VERSION_EXPORT_IN_PROGRESS:
      return "DATASET_VERSION_EXPORT_IN_PROGRESS";
    case StatusCode.DATASET_VERSION_EXPORT_UNEXPECTED_ERROR:
      return "DATASET_VERSION_EXPORT_UNEXPECTED_ERROR";
    case StatusCode.JOB_QUEUED:
      return "JOB_QUEUED";
    case StatusCode.JOB_RUNNING:
      return "JOB_RUNNING";
    case StatusCode.JOB_COMPLETED:
      return "JOB_COMPLETED";
    case StatusCode.JOB_FAILED:
      return "JOB_FAILED";
    case StatusCode.JOB_CANCELLED:
      return "JOB_CANCELLED";
    case StatusCode.JOB_UNEXPECTED_ERROR:
      return "JOB_UNEXPECTED_ERROR";
    case StatusCode.JOB_CONFLICT:
      return "JOB_CONFLICT";
    case StatusCode.AUTH_MISSING_IDP_ASSOC:
      return "AUTH_MISSING_IDP_ASSOC";
    case StatusCode.LIST_OBJECTS_FAILED:
      return "LIST_OBJECTS_FAILED";
    case StatusCode.ARCHIVE_EXTRACT_FAILED:
      return "ARCHIVE_EXTRACT_FAILED";
    case StatusCode.UPLOAD_IN_PROGRESS:
      return "UPLOAD_IN_PROGRESS";
    case StatusCode.UPLOAD_DONE:
      return "UPLOAD_DONE";
    case StatusCode.UPLOAD_FAILED:
      return "UPLOAD_FAILED";
    case StatusCode.UPLOAD_UNEXPECTED_ERROR:
      return "UPLOAD_UNEXPECTED_ERROR";
    case StatusCode.UPLOAD_EXPIRED:
      return "UPLOAD_EXPIRED";
    case StatusCode.UPLOAD_CANCELED:
      return "UPLOAD_CANCELED";
    case StatusCode.UPLOAD_CONFLICT:
      return "UPLOAD_CONFLICT";
    case StatusCode.BILLING_INVALID_INFO:
      return "BILLING_INVALID_INFO";
    case StatusCode.BILLING_MISSING_TOKENS:
      return "BILLING_MISSING_TOKENS";
    case StatusCode.LOG_ENTRIES_INVALID_REQUEST:
      return "LOG_ENTRIES_INVALID_REQUEST";
    case StatusCode.INTERNAL_SERVER_ISSUE:
      return "INTERNAL_SERVER_ISSUE";
    case StatusCode.INTERNAL_FETCHING_ISSUE:
      return "INTERNAL_FETCHING_ISSUE";
    case StatusCode.INTERNAL_DATABASE_ISSUE:
      return "INTERNAL_DATABASE_ISSUE";
    case StatusCode.INTERNAL_CONTEXT_CANCELED:
      return "INTERNAL_CONTEXT_CANCELED";
    case StatusCode.INTERNAL_UNEXPECTED_TIMEOUT:
      return "INTERNAL_UNEXPECTED_TIMEOUT";
    case StatusCode.INTERNAL_UNEXPECTED_V1:
      return "INTERNAL_UNEXPECTED_V1";
    case StatusCode.INTERNAL_UNEXPECTED_PANIC:
      return "INTERNAL_UNEXPECTED_PANIC";
    case StatusCode.INTERNAL_UNEXPECTED_SPIRE:
      return "INTERNAL_UNEXPECTED_SPIRE";
    case StatusCode.INTERNAL_REDIS_UNAVAILABLE:
      return "INTERNAL_REDIS_UNAVAILABLE";
    case StatusCode.INTERNAL_RESOURCE_EXHAUSTED:
      return "INTERNAL_RESOURCE_EXHAUSTED";
    case StatusCode.INTERNAL_REDIS_UNCATEGORIZED:
      return "INTERNAL_REDIS_UNCATEGORIZED";
    case StatusCode.INTERNAL_AWS_UNCATEGORIZED:
      return "INTERNAL_AWS_UNCATEGORIZED";
    case StatusCode.INTERNAL_AZURE_UNCATEGORIZED:
      return "INTERNAL_AZURE_UNCATEGORIZED";
    case StatusCode.INTERNAL_VECTORDB_UNCATEGORIZED:
      return "INTERNAL_VECTORDB_UNCATEGORIZED";
    case StatusCode.INTERNAL_ORACLE_UNCATEGORIZED:
      return "INTERNAL_ORACLE_UNCATEGORIZED";
    case StatusCode.INTERNAL_VULTR_UNCATEGORIZED:
      return "INTERNAL_VULTR_UNCATEGORIZED";
    case StatusCode.INTERNAL_GCP_UNCATEGORIZED:
      return "INTERNAL_GCP_UNCATEGORIZED";
    case StatusCode.CONN_UNCATEGORIZED:
      return "CONN_UNCATEGORIZED";
    case StatusCode.MODEL_UNCATEGORIZED:
      return "MODEL_UNCATEGORIZED";
    case StatusCode.INPUT_UNCATEGORIZED:
      return "INPUT_UNCATEGORIZED";
    case StatusCode.ANNOTATION_UNCATEGORIZED:
      return "ANNOTATION_UNCATEGORIZED";
    case StatusCode.BILLING_UNCATEGORIZED:
      return "BILLING_UNCATEGORIZED";
    case StatusCode.INTERNAL_UNCATEGORIZED:
      return "INTERNAL_UNCATEGORIZED";
    case StatusCode.BAD_REQUEST:
      return "BAD_REQUEST";
    case StatusCode.SERVER_ERROR:
      return "SERVER_ERROR";
    case StatusCode.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
