// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.20.3
// source: proto/clarifai/auth/types/types.proto

/* eslint-disable */

export const protobufPackage = "clarifai.auth.types";

/** Authorization type for endpoints. */
export enum AuthType {
  /**
   * undef - introduce undef so that the zero (default/unset) value of the enum is not a real
   * permission.  undef is only present for this purpose and should not be used
   * to indicate any "real" value.
   */
  undef = 0,
  /** NoAuth - No authorization need for this endpoint. */
  NoAuth = 1,
  /**
   * KeyAuth - This authorization requires API keys (both app-spceific keys and personal access tokens).
   * The endpoints that use this AuthType may also include a list of
   * clarifai.auth.utils.cl_depending_scopes.
   */
  KeyAuth = 2,
  /**
   * SessionTokenAuth - This uses a session token from your web browser. This is reserved for users/account level APIs
   * that are only needed in a browser.
   */
  SessionTokenAuth = 3,
  /** AdminAuth - This uses a special token for admin access to the APIs. */
  AdminAuth = 4,
  /**
   * PATAuth - This authorization requires personal access tokens. This is used for endpoints such as
   * /users/{user_id}/apps which are not specific. An app-specific API key will not work
   * when PATAuth is used.
   */
  PATAuth = 5,
  UNRECOGNIZED = -1,
}

export function authTypeFromJSON(object: any): AuthType {
  switch (object) {
    case 0:
    case "undef":
      return AuthType.undef;
    case 1:
    case "NoAuth":
      return AuthType.NoAuth;
    case 2:
    case "KeyAuth":
      return AuthType.KeyAuth;
    case 3:
    case "SessionTokenAuth":
      return AuthType.SessionTokenAuth;
    case 4:
    case "AdminAuth":
      return AuthType.AdminAuth;
    case 5:
    case "PATAuth":
      return AuthType.PATAuth;
    case -1:
    case "UNRECOGNIZED":
    default:
      return AuthType.UNRECOGNIZED;
  }
}

export function authTypeToJSON(object: AuthType): string {
  switch (object) {
    case AuthType.undef:
      return "undef";
    case AuthType.NoAuth:
      return "NoAuth";
    case AuthType.KeyAuth:
      return "KeyAuth";
    case AuthType.SessionTokenAuth:
      return "SessionTokenAuth";
    case AuthType.AdminAuth:
      return "AdminAuth";
    case AuthType.PATAuth:
      return "PATAuth";
    case AuthType.UNRECOGNIZED:
    default:
      return "UNRECOGNIZED";
  }
}
